{
    "swagger": "2.0",
    "info": {
        "version": "2.0-preview.2",
        "title": "Anomaly Detector v2 API",
        "description": "Anomaly Detector v2 API"
    },
    "paths": {
        "/anomalyAlertingConfigurations/{anomalyAlertingConfigurationId}": {
            "get": {
                "tags": [
                    "AnomalyAlertingConfiguration"
                ],
                "summary": "Query a single anomaly alerting configuration",
                "operationId": "GetAnomalyAlertingConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyAlertingConfigurationId",
                        "in": "path",
                        "description": "anomaly alerting configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AnomalyAlertingConfiguration"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AnomalyAlertingConfiguration"
                ],
                "summary": "Update anomaly alerting configuration",
                "operationId": "UpdateAnomalyAlertingConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyAlertingConfigurationId",
                        "in": "path",
                        "description": "anomaly alerting configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "anomaly alerting configuration",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AnomalyAlertingConfiguration"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AnomalyAlertingConfiguration"
                ],
                "summary": "Delete anomaly alerting configuration",
                "operationId": "DeleteAnomalyAlertingConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyAlertingConfigurationId",
                        "in": "path",
                        "description": "anomaly alerting configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/anomalyAlertingConfigurations": {
            "get": {
                "tags": [
                    "AnomalyAlertingConfiguration"
                ],
                "summary": "Query all anomaly alerting configurations for specific anomaly detection configuration",
                "operationId": "GetAnomalyAlertingConfigurations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "query",
                        "description": "anomaly detection configuration unique id",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ListBaseResponse[AnomalyAlertingConfiguration]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AnomalyAlertingConfiguration"
                ],
                "summary": "Create anomaly alerting configuration",
                "operationId": "CreateAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "anomaly alerting configuration",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AnomalyAlertingConfiguration"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/anomalyDetectionConfigurations/{anomalyDetectionConfigurationId}": {
            "get": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Query a single anomaly detection configuration.",
                "operationId": "GetAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AnomalyDetectionConfiguration"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Update anomaly detection configuration.",
                "operationId": "UpdateAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "anomaly detection configuration",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AnomalyDetectionConfiguration"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Delete anomaly detection configuration.",
                "operationId": "DeleteAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/anomalyDetectionConfigurations": {
            "get": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Query all anomaly detection configurations for specific metric.",
                "operationId": "GetAnomalyDetectionConfigurations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "query",
                        "description": "metric unique id",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ListBaseResponse[AnomalyDetectionConfiguration]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Create anomaly detection configuration.",
                "operationId": "CreateAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "anomaly detection configuration",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AnomalyDetectionConfiguration"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/anomalyDetectionConfigurations/{anomalyDetectionConfigurationId}/wholeMetricConfiguration": {
            "get": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Query anomaly detection configuration for whole metric.",
                "operationId": "GetWholeMetricAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WholeMetricConfiguration"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Update anomaly detection configuration for whole metric.",
                "operationId": "UpdateWholeMetricAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "whole metric configuration",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/WholeMetricConfiguration"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/anomalyDetectionConfigurations/{anomalyDetectionConfigurationId}/seriesGroupConfigurations/{seriesGroupConfigurationId}": {
            "get": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Query anomaly detection configuration for series group.",
                "operationId": "GetSeriesGroupAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "seriesGroupConfigurationId",
                        "in": "path",
                        "description": "series group configuration id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DimensionGroupConfiguration"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Update anomaly detection configuration for series group.",
                "operationId": "UpdateSeriesGroupAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "seriesGroupConfigurationId",
                        "in": "path",
                        "description": "series group configuration id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "series group configuration",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DimensionGroupConfiguration"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Delete anomaly detection configuration for series group.",
                "operationId": "DeleteSeriesGroupAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "seriesGroupConfigurationId",
                        "in": "path",
                        "description": "series group configuration id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/anomalyDetectionConfigurations/{anomalyDetectionConfigurationId}/seriesGroupConfigurations": {
            "get": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Query anomaly detection configurations for all series group.",
                "operationId": "GetSeriesGroupAnomalyDetectionConfigurations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ListBaseResponse[DimensionGroupConfiguration]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Create anomaly detection configuration for series group.",
                "operationId": "CreateSeriesGroupAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "series group configuration",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DimensionGroupConfiguration"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/anomalyDetectionConfigurations/{anomalyDetectionConfigurationId}/seriesConfigurations/{seriesConfigurationId}": {
            "get": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Query anomaly detection configuration for specific series.",
                "operationId": "GetSeriesAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "seriesConfigurationId",
                        "in": "path",
                        "description": "series configuration id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SeriesConfiguration"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Update anomaly detection configuration for specific series.",
                "operationId": "UpdateSeriesAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "seriesConfigurationId",
                        "in": "path",
                        "description": "series configuration id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "series configuration",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SeriesConfiguration"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Delete anomaly detection configuration for specific series.",
                "operationId": "DeleteSeriesAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "seriesConfigurationId",
                        "in": "path",
                        "description": "series configuration id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/anomalyDetectionConfigurations/{anomalyDetectionConfigurationId}/seriesConfigurations": {
            "get": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Query anomaly detection configurations for all series.",
                "operationId": "GetSeriesAnomalyDetectionConfigurations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ListBaseResponse[SeriesConfiguration]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AnomalyDetectionConfiguration"
                ],
                "summary": "Create anomaly detection configuration for specific series.",
                "operationId": "CreateSeriesAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "series configuration",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SeriesConfiguration"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}/notAvailableAlertingConfiguration": {
            "get": {
                "tags": [
                    "DataeedAlert"
                ],
                "summary": "Get data feed not available alerting configuration by data feed id",
                "operationId": "GetDatafeedAlert",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "description": "Datafeed unique ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataFeedNotAvailableAlertingConfiguration"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DataeedAlert"
                ],
                "summary": "Create/Update data feed not available alert configuration by data feed id",
                "operationId": "PutDatafeedAlert",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "description": "The data feed Id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The data feed alerting configuration detail",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DataFeedNotAvailableAlertingConfiguration"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource.",
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}/notAvailableAlerts": {
            "get": {
                "tags": [
                    "DataeedAlert"
                ],
                "summary": "List data feed not available alerts by data feed id",
                "operationId": "ListDatafeedAlertByDatafeed",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "description": "The data feed Id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "alertStatus",
                        "in": "query",
                        "description": "Requested alert status.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "All",
                            "Sent",
                            "Resolved"
                        ]
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Data feed not available alerts skipped number for paging.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "description": "Data feed not available alerts size for paging.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DatafeedNotAvailableAlertList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/notAvailableAlerts": {
            "get": {
                "tags": [
                    "DataeedAlert"
                ],
                "summary": "List data feed not available alerts for current user",
                "operationId": "ListDatafeedAlertByUser",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datafeedId",
                        "in": "query",
                        "description": "The data feed Id",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "alertStatus",
                        "in": "query",
                        "description": "Requested alert status.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "All",
                            "Sent",
                            "Resolved"
                        ]
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Data feed not available alerts skipped number for paging.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "description": "Data feed not available alerts size for paging.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DatafeedNotAvailableAlertList"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}": {
            "get": {
                "tags": [
                    "Datafeed"
                ],
                "summary": "Get a data feed by its id.",
                "operationId": "GetDatafeedById",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "description": "The data feed unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DatafeedDetailInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Datafeed"
                ],
                "summary": "Delete a data feed.",
                "operationId": "DeleteDatafeed",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "description": "The data feed id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds": {
            "get": {
                "tags": [
                    "Datafeed"
                ],
                "summary": "List all data feeds.",
                "operationId": "ListDatafeeds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datafeedName",
                        "in": "query",
                        "description": "filter data feed by its name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dataSourceType",
                        "in": "query",
                        "description": "filter data feed by its source type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "SqlServer",
                            "Cube",
                            "JSON",
                            "AzureBlob",
                            "Kusto",
                            "AzureTable",
                            "MySql",
                            "PostgreSql",
                            "InfluxDB",
                            "EventHub",
                            "HttpRequest",
                            "CosmosDB",
                            "MongoDB"
                        ]
                    },
                    {
                        "name": "granularityName",
                        "in": "query",
                        "description": "filter data feed by its granularity",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Yearly",
                            "Monthly",
                            "Weekly",
                            "Daily",
                            "Hourly",
                            "Minutely",
                            "Secondly",
                            "Custom"
                        ]
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "filter data feed by its status",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Active",
                            "Paused"
                        ]
                    },
                    {
                        "name": "creator",
                        "in": "query",
                        "description": "filter data feed by its creator",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DatafeedDetailInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Datafeed"
                ],
                "summary": "Create a new data feed.",
                "operationId": "CreateDatafeed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Datafeed detail",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DatafeedDetailInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}/updateName": {
            "put": {
                "tags": [
                    "Datafeed"
                ],
                "summary": "Update the name of a data feed.",
                "operationId": "UpdateDatafeedName",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "datafeed name",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DatafeedName"
                        }
                    },
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "description": "datafeed unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}/updateIngestion": {
            "put": {
                "tags": [
                    "Datafeed"
                ],
                "summary": "Update the ingestion configuration of a data feed.",
                "operationId": "UpdateDatafeedIngestion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "ingestion config",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/IngestionConfig"
                        }
                    },
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}/updateFillMissingPoints": {
            "put": {
                "tags": [
                    "Datafeed"
                ],
                "summary": "Update the missing point filling configuration of a data feed.",
                "operationId": "UpdateDatafeedFillMissingPoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "fill missing point config",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/FillMissingPointConfig"
                        }
                    },
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}/updateRollUp": {
            "put": {
                "tags": [
                    "Datafeed"
                ],
                "summary": "Update the roll-up configuration of a data feed.",
                "operationId": "UpdateDatafeedRollUp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "roll up config",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RollUpConfig"
                        }
                    },
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}/activation": {
            "put": {
                "tags": [
                    "Datafeed"
                ],
                "summary": "Update the activation status of a data feed.",
                "operationId": "UpdateDatafeedStatus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "status",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Activation"
                        }
                    },
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}/updateViewMode": {
            "put": {
                "tags": [
                    "Datafeed"
                ],
                "summary": "Update the view mode of a data feed.",
                "operationId": "UpdateDatafeedViewMode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "view mode",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ViewModeConfig"
                        }
                    },
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}/addUser": {
            "put": {
                "tags": [
                    "Datafeed"
                ],
                "summary": "Add a user as the administrator of a data feed.",
                "operationId": "AddDatafeedUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "add user request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EntityPrivilegeControl"
                        }
                    },
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}/removeUser": {
            "put": {
                "tags": [
                    "Datafeed"
                ],
                "summary": "Remove a user from the administrator of a data feed.",
                "operationId": "RemoveDatafeedUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "remove user request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EntityPrivilegeControl"
                        }
                    },
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/metrics/{metricId}/series/anomalyFeedback": {
            "put": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Save anomaly feedbacks.",
                "operationId": "SaveAnomalyFeedback",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "path",
                        "description": "The metric id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SaveAnomalyFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Delete anomaly feedbacks.",
                "operationId": "DeleteAnomalyFeedback",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "path",
                        "description": "The metric id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeleteAnomalyFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/metrics/{metricId}/series/anomalyFeedback/!query": {
            "post": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Load anomaly feedbacks.",
                "operationId": "LoadAnomalyFeedback",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "path",
                        "description": "The metric id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LoadFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AnomalyFeedbackItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/metrics/{metricId}/series/changePointFeedback": {
            "put": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Save change point feedback.",
                "operationId": "SaveChangePointFeedback",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "path",
                        "description": "The metric id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SaveChangePointFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Delete change point feedback.",
                "operationId": "DeleteChangePointFeedback",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "path",
                        "description": "The metric id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeleteChangePointFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/metrics/{metricId}/series/changePointFeedback/!query": {
            "post": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Load change point feedbacks.",
                "operationId": "LoadChangePointFeedback",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "path",
                        "description": "The metric id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LoadFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChangePointFeedbackItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/metrics/{metricId}/series/periodFeedback": {
            "put": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Save period feedback.",
                "operationId": "SavePeirodFeedback",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "path",
                        "description": "The metric id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SavePeriodFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Delete period feedback.",
                "operationId": "DeletePeriodFeedback",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "path",
                        "description": "The metric id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeletePeriodFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/metrics/{metricId}/series/periodFeedback/!query": {
            "post": {
                "tags": [
                    "Feedback"
                ],
                "summary": "Load period feedbacks.",
                "operationId": "LoadPeriodFeedback",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "path",
                        "description": "The metric id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LoadPeriodFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PeriodFeedbackItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/hooks/{hookId}": {
            "get": {
                "tags": [
                    "Hook"
                ],
                "summary": "Get a hook by its id",
                "operationId": "GetHook",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "hookId",
                        "in": "path",
                        "description": "Hook unique ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HookInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Hook"
                ],
                "summary": "Update a hook",
                "operationId": "UpdateHook",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Update hook request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HookInfo"
                        }
                    },
                    {
                        "name": "hookId",
                        "in": "path",
                        "description": "hook unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Hook"
                ],
                "summary": "Delete a hook",
                "operationId": "DeleteHook",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "hookId",
                        "in": "path",
                        "description": "hook unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/hooks": {
            "get": {
                "tags": [
                    "Hook"
                ],
                "summary": "List all hooks",
                "operationId": "ListHooks",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HookInfo"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Hook"
                ],
                "summary": "Create a new hook",
                "operationId": "CreateHook",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Create hook request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HookInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/hooks/{hookId}/addUser": {
            "put": {
                "tags": [
                    "Hook"
                ],
                "summary": "Add a user as the administrator of a hook",
                "operationId": "AddHookUser",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Hook user",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HookUser"
                        }
                    },
                    {
                        "name": "hookId",
                        "in": "path",
                        "description": "hook unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/hooks/{hookId}/removeUser": {
            "put": {
                "tags": [
                    "Hook"
                ],
                "summary": "Remove a user from the administrator from a hook",
                "operationId": "RemoveHookUser",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Hook user",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HookUser"
                        }
                    },
                    {
                        "name": "hookId",
                        "in": "path",
                        "description": "hook unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}/getIngestionStatus": {
            "get": {
                "tags": [
                    "IngestionStatus"
                ],
                "summary": "Get data ingestion status by datafeed.",
                "operationId": "GetDataFeedStatus",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "description": "The data feed Id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "The start point of time range for getting data ingestion status.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "The end point of time range for getting data ingestion status.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "maxCount",
                        "in": "query",
                        "description": "The max retrive count of data ingestion status records. Non-positive number indicates no limitation.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/IngestionStatusByDataFeed"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}/resetIngestionStatus": {
            "post": {
                "tags": [
                    "IngestionStatus"
                ],
                "summary": "Reset data ingestion status by data feed to backfill data.",
                "operationId": "ResetDataFeedStatus",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "description": "The data feed id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "The backfill time range",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/IngestionStatusResetOption"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}/getIngestionLatestSuccess": {
            "get": {
                "tags": [
                    "IngestionStatus"
                ],
                "summary": "Get data last success ingestion job timestamp by data feed.",
                "operationId": "GetLatestSuccess",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "description": "The data feed Id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataFeedIngestionLatestSuccess"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/datafeeds/{datafeedId}/getIngestionLatestActive": {
            "get": {
                "tags": [
                    "IngestionStatus"
                ],
                "summary": "Get data last active ingestion job timestamp by data feed.",
                "operationId": "GetLatestActive",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datafeedId",
                        "in": "path",
                        "description": "The data feed Id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataFeedIngestionLatestActive"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/metrics/{metricId}/series": {
            "get": {
                "tags": [
                    "Metric"
                ],
                "summary": "Get series from metric.",
                "operationId": "GetMetricSeries",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "path",
                        "description": "metric unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/MetricSeries"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/metrics/{metricId}/series/data/!query": {
            "post": {
                "tags": [
                    "Metric"
                ],
                "summary": "Get time series data from metric.",
                "operationId": "GetMetricSeriesData",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "path",
                        "description": "metric unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "query time series data condition",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SeriesDataQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SeriesDataItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/metrics/{metricId}/presetEvent": {
            "get": {
                "tags": [
                    "PresetEvent"
                ],
                "summary": "Get metric's preset event config by metric id",
                "operationId": "GetPresetEvent",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "path",
                        "description": "The metric Id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PresetEvent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "PresetEvent"
                ],
                "summary": "Create or update metric's preset event",
                "operationId": "UpsertPresetEvent",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metricId",
                        "in": "path",
                        "description": "The metric Id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Upsert preset event request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PresetEvent"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/anomalyDetectionConfigurations/{anomalyDetectionConfigurationId}/anomalies/!query": {
            "post": {
                "tags": [
                    "SmartAlert"
                ],
                "summary": "Query anomalies from anomaly detection configuration",
                "operationId": "GetAnomaliesFromAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "query detection result request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DetectionResultQuery"
                        }
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "description": "the number of results to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "the offset into results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AnomalyResult"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/anomalyAlertingConfigurations/{anomalyAlertingConfigurationId}/anomalies/!query": {
            "post": {
                "tags": [
                    "SmartAlert"
                ],
                "summary": "Query anomalies from anomaly alerting configuration",
                "operationId": "GetAnomaliesFromAnomalyAlertingConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyAlertingConfigurationId",
                        "in": "path",
                        "description": "anomaly alerting configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "query alerting result request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AlertingResultQuery"
                        }
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "description": "the number of results to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "the offset into results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AnomalyResult"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/anomalyDetectionConfigurations/{anomalyDetectionConfigurationId}/incidents/!query": {
            "post": {
                "tags": [
                    "SmartAlert"
                ],
                "summary": "Query incidents from anomaly detection configuration",
                "operationId": "GetIncidentsFromAnomalyDetectionConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "query detection result request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DetectionResultQuery"
                        }
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "description": "the number of results to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "the offset into results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IncidentResult"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/anomalyAlertingConfigurations/{anomalyAlertingConfigurationId}/incidents/!query": {
            "post": {
                "tags": [
                    "SmartAlert"
                ],
                "summary": "Query incidents from anomaly alerting configuration",
                "operationId": "GetIncidentsFromAnomalyAlertingConfiguration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyAlertingConfigurationId",
                        "in": "path",
                        "description": "anomaly alerting configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "query alerting result request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AlertingResultQuery"
                        }
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "description": "the number of results to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "the offset into results",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/IncidentResult"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/anomalyDetectionConfigurations/{anomalyDetectionConfigurationId}/incidentTree/!query": {
            "post": {
                "tags": [
                    "SmartAlert"
                ],
                "summary": "Query whole incident tree",
                "operationId": "GetIncidentTree",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "anomalyDetectionConfigurationId",
                        "in": "path",
                        "description": "anomaly detection configuration unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "query incident tree request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/IncidentTreeQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/IncidentTree"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/timeSeriesGroups": {
            "get": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "List time series groups",
                "operationId": "GetTimeSeriesGroupList",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimeSeriesGroup"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Create a time series group",
                "operationId": "createTimeSeriesGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "create time series group request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/timeSeriesGroups/{groupId}": {
            "get": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Get a time series group",
                "operationId": "getTimeSeriesGroupDetails",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "time series group unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Update a time series group",
                "operationId": "updateTimeSeriesGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "time series group unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "update time series group request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesGroup"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Delete a time series group",
                "operationId": "deleteTimeSeriesGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "time series group unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/timeSeriesGroups/count": {
            "get": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Get the number of time series groups",
                "operationId": "GetTimeSeriesGroupCount",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesGroupCount"
                        }
                    }
                }
            }
        },
        "/timeSeriesGroups/{groupId}/addUser": {
            "put": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Add user authorization for a time series group",
                "operationId": "addTimeSeriesGroupUser",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "time series group unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "add time series group user request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EntityPrivilegeControl"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/timeSeriesGroups/{groupId}/removeUser": {
            "put": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Remove user authorization for a time series group",
                "operationId": "removeTimeSeriesGroupUser",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "time series group unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "remove time series group user request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EntityPrivilegeControl"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/timeSeriesGroups/{groupId}/seriesSets": {
            "post": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Create a time series set under a time series group",
                "operationId": "addTimeSeriesGroupSeriesSet",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "time series group unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "add time series set request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesGroupSeriesSet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource.",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/timeSeriesGroups/{groupId}/seriesSets/{seriesSetId}": {
            "put": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Update a time series set name",
                "operationId": "updateTimeSeriesGroupSeriesSetName",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "time series group unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "seriesSetId",
                        "in": "path",
                        "description": "time series set unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "update time series set name request",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesGroupSeriesSetName"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Delete a time series set from a time series group",
                "operationId": "deleteTimeSeriesGroupSeriesSet",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "time series group unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "seriesSetId",
                        "in": "path",
                        "description": "time series set unique id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeleteTimeSeriesGroupSeriesSetResponse"
                        }
                    },
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/timeSeriesGroups/apps": {
            "get": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "List all time series group applications",
                "operationId": "GetTimeSeriesGroupApps",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesGroupApps"
                        }
                    }
                }
            }
        },
        "/timeSeriesGroups/apps/{appId}": {
            "get": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Get time series group application by its id",
                "operationId": "GetTimeSeriesGroupApp",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "appId",
                        "in": "path",
                        "description": "Time series group application unique ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesGroupApp"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/timeSeriesGroups/{groupId}/appInstances": {
            "post": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Create an application instance under a time series group",
                "operationId": "createTimeSeriesGroupAppInstance",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "time series group app instance",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesGroupAppInstance"
                        }
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "Time series group unique ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource.",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/timeSeriesGroups/{groupId}/appInstances/{appInstanceId}": {
            "put": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Update a time series group's application instance by its id",
                "operationId": "updateTimeSerisGroupAppInstance",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "time series group app instance with field to be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesGroupAppInstance"
                        }
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "Time series group unique ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "appInstanceId",
                        "in": "path",
                        "description": "Time series group application instance unique ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Delete an application instance from a time series group",
                "operationId": "deleteTimeSerisGroupAppInstance",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "Time series group unique ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "appInstanceId",
                        "in": "path",
                        "description": "Time series group app instance unique Id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/timeSeriesGroups/{groupId}/appInstances/{appInstanceId}/latestResult": {
            "get": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Get the latest running result from a time series group application instance by its id",
                "operationId": "GetTimeSeriesGroupAppInstanceLatestResult",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "Time series group application group unique ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "appInstanceId",
                        "in": "path",
                        "description": "Time series group application instance unique ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesGroupAppInstanceResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        },
        "/timeSeriesGroups/{groupId}/appInstances/{appInstanceId}/history": {
            "get": {
                "tags": [
                    "TimeSeriesGroup"
                ],
                "summary": "Get the running result history from a time series group application instance by its id",
                "operationId": "GetTimeSeriesGroupAppInstanceHistory",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "Time series group application group unique ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "appInstanceId",
                        "in": "path",
                        "description": "Time series group application instance unique ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TimeSeriesGroupAppInstanceHistory"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ErrorCode"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AnomalyAlertingConfiguration": {
            "required": [
                "name",
                "crossMetricsOperator",
                "metricAlertingConfigurations"
            ],
            "type": "object",
            "properties": {
                "anomalyAlertingConfigurationId": {
                    "format": "uuid",
                    "description": "Anomaly alerting configuration unique id [Read-Only]",
                    "type": "string"
                },
                "name": {
                    "description": "Anomaly alerting configuration name",
                    "type": "string"
                },
                "crossMetricsOperator": {
                    "description": "cross metrics operator",
                    "enum": [
                        "AND",
                        "OR",
                        "XOR"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "LogicType",
                        "modelAsString": true
                    }
                },
                "hookIds": {
                    "description": "hook unique ids",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "metricAlertingConfigurations": {
                    "description": "Anomaly alerting configurations",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MetricAlertingConfiguration"
                    }
                }
            }
        },
        "MetricAlertingConfiguration": {
            "required": [
                "anomalyDetectionConfigurationId",
                "metricId",
                "anomalyScopeType"
            ],
            "type": "object",
            "properties": {
                "anomalyDetectionConfigurationId": {
                    "format": "uuid",
                    "description": "Anomaly detection configuration unique id",
                    "type": "string"
                },
                "metricId": {
                    "format": "uuid",
                    "description": "metric unique id",
                    "type": "string"
                },
                "anomalyScopeType": {
                    "description": "Anomaly scope",
                    "enum": [
                        "All",
                        "Dimension",
                        "TopN",
                        "Favorite"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "AnomalyScope",
                        "modelAsString": true
                    }
                },
                "dimensionAnomalyScope": {
                    "$ref": "#/definitions/DimensionGroupIdentity",
                    "description": "Anomaly scope - series group\r\n\r\nshould be specified when anomalyScopeType is Dimension"
                },
                "topNAnomalyScope": {
                    "$ref": "#/definitions/TopNGroupScope",
                    "description": "Anomaly scope - top N\r\n\r\nshould be specified when anomalyScopeType is TopN"
                },
                "filterOperator": {
                    "description": "filter operator",
                    "enum": [
                        "AND",
                        "OR",
                        "XOR"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "LogicType",
                        "modelAsString": true
                    }
                },
                "severityFilter": {
                    "$ref": "#/definitions/SeverityCondition",
                    "description": "severity filter"
                },
                "snoozeFilter": {
                    "$ref": "#/definitions/AlertSnoozeCondition",
                    "description": "snooze filter"
                },
                "valueFilter": {
                    "$ref": "#/definitions/ValueCondition",
                    "description": "value filter"
                }
            }
        },
        "DimensionGroupIdentity": {
            "type": "object",
            "properties": {
                "groupId": {
                    "description": "series group id\r\n\r\nseries group id and tagSet should be specified at least one",
                    "type": "string"
                },
                "tagSet": {
                    "description": "tagSet\r\n\r\nseries group configuration id and tagSet should be specified at least one",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "TopNGroupScope": {
            "type": "object",
            "properties": {
                "top": {
                    "format": "int32",
                    "description": "top N",
                    "maximum": 2147483647.0,
                    "minimum": 1.0,
                    "type": "integer"
                },
                "period": {
                    "format": "int32",
                    "description": "point count used to look back",
                    "maximum": 2147483647.0,
                    "minimum": 1.0,
                    "type": "integer"
                },
                "minTopCount": {
                    "format": "int32",
                    "description": "min count should be in top N\r\n\r\nshould be less than or equal to period",
                    "maximum": 2147483647.0,
                    "minimum": 1.0,
                    "type": "integer"
                }
            }
        },
        "SeverityCondition": {
            "type": "object",
            "properties": {
                "minAlertSeverity": {
                    "description": "min alert severity",
                    "enum": [
                        "Low",
                        "Medium",
                        "High"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "SeverityType",
                        "modelAsString": true
                    }
                },
                "maxAlertSeverity": {
                    "description": "max alert severity",
                    "enum": [
                        "Low",
                        "Medium",
                        "High"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "SeverityType",
                        "modelAsString": true
                    }
                }
            }
        },
        "AlertSnoozeCondition": {
            "type": "object",
            "properties": {
                "autoSnooze": {
                    "format": "int32",
                    "description": "snooze point count",
                    "maximum": 2147483647.0,
                    "minimum": 0.0,
                    "type": "integer"
                },
                "snoozeScope": {
                    "description": "snooze scope",
                    "enum": [
                        "Metric",
                        "Series"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "SnoozeScope",
                        "modelAsString": true
                    }
                },
                "onlyForSuccessive": {
                    "description": "only snooze for successive anomalies",
                    "type": "boolean"
                }
            }
        },
        "ValueCondition": {
            "type": "object",
            "properties": {
                "lower": {
                    "format": "double",
                    "description": "lower bound",
                    "type": "number"
                },
                "upper": {
                    "format": "double",
                    "description": "upper bound",
                    "type": "number"
                },
                "direction": {
                    "description": "value filter direction",
                    "enum": [
                        "Both",
                        "Down",
                        "Up"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "Direction",
                        "modelAsString": true
                    }
                },
                "metricId": {
                    "format": "uuid",
                    "description": "the other metric unique id used for value filter",
                    "type": "string"
                },
                "triggerForMissing": {
                    "description": "trigger alert when the corresponding point is missing in the other metric",
                    "type": "boolean"
                }
            }
        },
        "ErrorCode": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "code": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "ListBaseResponse[AnomalyAlertingConfiguration]": {
            "type": "object",
            "properties": {
                "value": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AnomalyAlertingConfiguration"
                    }
                }
            }
        },
        "AnomalyDetectionConfiguration": {
            "required": [
                "name",
                "metricId",
                "wholeMetricConfiguration"
            ],
            "type": "object",
            "properties": {
                "anomalyDetectionConfigurationId": {
                    "format": "uuid",
                    "description": "Anomaly detection configuration unique id [Read-Only]",
                    "type": "string"
                },
                "name": {
                    "description": "anomaly detection configuration name",
                    "type": "string"
                },
                "description": {
                    "description": "anomaly detection configuration description",
                    "type": "string"
                },
                "metricId": {
                    "format": "uuid",
                    "description": "metric unique id",
                    "type": "string"
                },
                "wholeMetricConfiguration": {
                    "$ref": "#/definitions/WholeMetricConfiguration",
                    "description": "detection configuration for whole metric"
                },
                "dimensionGroupOverrideConfigurations": {
                    "description": "detection configuration for series group",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DimensionGroupConfiguration"
                    }
                },
                "seriesOverrideConfigurations": {
                    "description": "detection configuration for specific series",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SeriesConfiguration"
                    }
                },
                "favoriteSeries": {
                    "description": "favorite series",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SeriesIdentity"
                    }
                }
            }
        },
        "WholeMetricConfiguration": {
            "required": [
                "conditionOperator"
            ],
            "type": "object",
            "properties": {
                "conditionOperator": {
                    "description": "condition operator",
                    "enum": [
                        "AND",
                        "OR"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "LogicType",
                        "modelAsString": true
                    }
                },
                "smartDetectionCondition": {
                    "$ref": "#/definitions/SmartDetectionCondition",
                    "description": "smart detection condition\r\n\r\nsmart detection, hard threshold and change threshold condition should be specified at least one"
                },
                "hardThresholdCondition": {
                    "$ref": "#/definitions/HardThresholdCondition",
                    "description": "hard threshold condition\r\n\r\nsmart detection, hard threshold and change threshold condition should be specified at least one"
                },
                "changeThresholdCondition": {
                    "$ref": "#/definitions/ChangeThresholdCondition",
                    "description": "change threshold condition\r\n\r\nsmart detection, hard threshold and change threshold condition should be specified at least one"
                }
            }
        },
        "DimensionGroupConfiguration": {
            "required": [
                "group",
                "conditionOperator"
            ],
            "type": "object",
            "properties": {
                "group": {
                    "$ref": "#/definitions/DimensionGroupConfigurationIdentity",
                    "description": "series group"
                },
                "conditionOperator": {
                    "description": "condition operator",
                    "enum": [
                        "AND",
                        "OR"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "LogicType",
                        "modelAsString": true
                    }
                },
                "smartDetectionCondition": {
                    "$ref": "#/definitions/SmartDetectionCondition",
                    "description": "smart detection condition\r\n\r\nsmart detection, hard threshold and change threshold condition should be specified at least one"
                },
                "hardThresholdCondition": {
                    "$ref": "#/definitions/HardThresholdCondition",
                    "description": "hard threshold condition\r\n\r\nsmart detection, hard threshold and change threshold condition should be specified at least one"
                },
                "changeThresholdCondition": {
                    "$ref": "#/definitions/ChangeThresholdCondition",
                    "description": "change threshold condition\r\n\r\nsmart detection, hard threshold and change threshold condition should be specified at least one"
                }
            }
        },
        "SeriesConfiguration": {
            "required": [
                "series",
                "conditionOperator"
            ],
            "type": "object",
            "properties": {
                "series": {
                    "$ref": "#/definitions/SeriesConfigurationIdentity",
                    "description": "series"
                },
                "conditionOperator": {
                    "description": "condition operator",
                    "enum": [
                        "AND",
                        "OR"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "LogicType",
                        "modelAsString": true
                    }
                },
                "smartDetectionCondition": {
                    "$ref": "#/definitions/SmartDetectionCondition",
                    "description": "smart detection condition\r\n\r\nsmart detection, hard threshold and change threshold condition should be specified at least one"
                },
                "hardThresholdCondition": {
                    "$ref": "#/definitions/HardThresholdCondition",
                    "description": "hard threshold condition\r\n\r\nsmart detection, hard threshold and change threshold condition should be specified at least one"
                },
                "changeThresholdCondition": {
                    "$ref": "#/definitions/ChangeThresholdCondition",
                    "description": "change threshold condition\r\n\r\nsmart detection, hard threshold and change threshold condition should be specified at least one"
                }
            }
        },
        "SeriesIdentity": {
            "type": "object",
            "properties": {
                "seriesId": {
                    "description": "series id\r\n\r\nseries id and tagSet should be specified at least one",
                    "type": "string"
                },
                "tagSet": {
                    "description": "tagSet\r\n\r\nseries id and tagSet should be specified at least one",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SmartDetectionCondition": {
            "required": [
                "sensitivity",
                "boundaryVersion",
                "anomalyDetectorDirection",
                "suppressCondition"
            ],
            "type": "object",
            "properties": {
                "sensitivity": {
                    "format": "double",
                    "description": "sensitivity",
                    "type": "number"
                },
                "boundaryVersion": {
                    "format": "int32",
                    "description": "boundaryVersion",
                    "maximum": 2.0,
                    "minimum": 1.0,
                    "type": "integer"
                },
                "anomalyDetectorDirection": {
                    "description": "detection direction",
                    "enum": [
                        "Both",
                        "Down",
                        "Up"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "AnomalyDetectorDirection",
                        "modelAsString": true
                    }
                },
                "suppressCondition": {
                    "$ref": "#/definitions/SuppressCondition",
                    "description": "suppress condition"
                }
            }
        },
        "HardThresholdCondition": {
            "required": [
                "lowerBound",
                "upperBound",
                "anomalyDetectorDirection",
                "suppressCondition"
            ],
            "type": "object",
            "properties": {
                "lowerBound": {
                    "format": "double",
                    "description": "lower bound",
                    "type": "number"
                },
                "upperBound": {
                    "format": "double",
                    "description": "upper bound",
                    "type": "number"
                },
                "anomalyDetectorDirection": {
                    "description": "detection direction",
                    "enum": [
                        "Both",
                        "Down",
                        "Up"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "AnomalyDetectorDirection",
                        "modelAsString": true
                    }
                },
                "suppressCondition": {
                    "$ref": "#/definitions/SuppressCondition",
                    "description": "suppress condition"
                }
            }
        },
        "ChangeThresholdCondition": {
            "required": [
                "changePercentage",
                "shiftPoint",
                "anomalyDetectorDirection",
                "suppressCondition"
            ],
            "type": "object",
            "properties": {
                "changePercentage": {
                    "format": "double",
                    "description": "change percentage",
                    "type": "number"
                },
                "shiftPoint": {
                    "format": "int32",
                    "description": "shift point",
                    "type": "integer"
                },
                "anomalyDetectorDirection": {
                    "description": "detection direction",
                    "enum": [
                        "Both",
                        "Down",
                        "Up"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "AnomalyDetectorDirection",
                        "modelAsString": true
                    }
                },
                "suppressCondition": {
                    "$ref": "#/definitions/SuppressCondition",
                    "description": "suppress condition"
                }
            }
        },
        "DimensionGroupConfigurationIdentity": {
            "type": "object",
            "properties": {
                "seriesGroupConfigurationId": {
                    "description": "series group configuration id\r\n\r\nseries group configuration id and tagSet should be specified at least one",
                    "type": "string"
                },
                "tagSet": {
                    "description": "tagSet\r\n\r\nseries group configuration id and tagSet should be specified at least one",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SeriesConfigurationIdentity": {
            "type": "object",
            "properties": {
                "seriesConfigurationId": {
                    "description": "series configuration id\r\n\r\nseries configuration id and tagSet should be specified at least one",
                    "type": "string"
                },
                "tagSet": {
                    "description": "tagSet\r\n\r\nseries configuration id and tagSet should be specified at least one",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SuppressCondition": {
            "required": [
                "minAlertNumber",
                "minAlertRatio"
            ],
            "type": "object",
            "properties": {
                "minAlertNumber": {
                    "format": "int32",
                    "description": "min alert number",
                    "type": "integer"
                },
                "minAlertRatio": {
                    "format": "double",
                    "description": "min alert ratio",
                    "type": "number"
                }
            }
        },
        "ListBaseResponse[AnomalyDetectionConfiguration]": {
            "type": "object",
            "properties": {
                "value": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AnomalyDetectionConfiguration"
                    }
                }
            }
        },
        "ListBaseResponse[DimensionGroupConfiguration]": {
            "type": "object",
            "properties": {
                "value": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DimensionGroupConfiguration"
                    }
                }
            }
        },
        "ListBaseResponse[SeriesConfiguration]": {
            "type": "object",
            "properties": {
                "value": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SeriesConfiguration"
                    }
                }
            }
        },
        "DataFeedNotAvailableAlertingConfiguration": {
            "required": [
                "gracePeriodInSeconds",
                "snoozeAlertCount",
                "hook"
            ],
            "type": "object",
            "properties": {
                "gracePeriodInSeconds": {
                    "description": "Grace period to consider data feed as not available after first ingestion task if it received no data.",
                    "type": "string"
                },
                "snoozeAlertCount": {
                    "description": "The number of continuous timestamps after the first not available time slice.",
                    "type": "string"
                },
                "hook": {
                    "description": "Associated hook(s).",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HookBrief"
                    }
                }
            }
        },
        "HookBrief": {
            "type": "object",
            "properties": {
                "hookId": {
                    "format": "uuid",
                    "description": "Hook unique id",
                    "type": "string"
                },
                "hookName": {
                    "description": "hook unique name",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "DatafeedNotAvailableAlertList": {
            "type": "object",
            "properties": {
                "notAvailableAlerts": {
                    "description": "Data feed not available alerts by data feed.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/DatafeedNotAvailableAlert"
                    }
                }
            }
        },
        "DatafeedNotAvailableAlert": {
            "type": "object",
            "properties": {
                "datafeedId": {
                    "format": "uuid",
                    "description": "Data feed unique id",
                    "type": "string"
                },
                "dataTimestamp": {
                    "format": "date-time",
                    "description": "The alerting data timestamp.",
                    "type": "string"
                },
                "detail": {
                    "description": "The detailed information for the alert. Or \"Resolved\" for resolved alerts.",
                    "type": "string"
                },
                "alertResolvedTimestamp": {
                    "format": "date-time",
                    "description": "The time when the alert is resolved.",
                    "type": "string"
                }
            }
        },
        "DatafeedDetailInfo": {
            "required": [
                "dataSourceType"
            ],
            "type": "object",
            "properties": {
                "datafeedId": {
                    "format": "uuid",
                    "description": "data feed unique id",
                    "type": "string",
                    "readOnly": true
                },
                "datafeedName": {
                    "description": "data feed name",
                    "type": "string"
                },
                "metrics": {
                    "description": "measure list",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Metric"
                    }
                },
                "dimensions": {
                    "description": "dimension list",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Dimension"
                    }
                },
                "dataStartFrom": {
                    "format": "date-time",
                    "description": "ingestion start time",
                    "type": "string"
                },
                "dataSourceType": {
                    "description": "data source type",
                    "enum": [
                        "SqlServer",
                        "Cube",
                        "JSON",
                        "AzureBlob",
                        "Kusto",
                        "AzureTable",
                        "MySql",
                        "PostgreSql",
                        "InfluxDB",
                        "EventHub",
                        "HttpRequest",
                        "CosmosDB",
                        "MongoDB"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "DataSourceType",
                        "modelAsString": true
                    }
                },
                "timestampColumn": {
                    "description": "user-defined timestamp column. if timestampColumn is null, start time of every time slice will be used as default value.",
                    "type": "string"
                },
                "startOffsetInSeconds": {
                    "format": "int64",
                    "description": "the time that the beginning of data ingestion task will delay for every data slice according to this offset.",
                    "default": 0,
                    "type": "integer"
                },
                "maxQueryPerMinute": {
                    "format": "float",
                    "description": "the max number of queries per minute against user data source for data ingestion. A nagative value means no limitation.",
                    "default": -1,
                    "type": "number"
                },
                "granularityName": {
                    "description": "granularity",
                    "enum": [
                        "Yearly",
                        "Monthly",
                        "Weekly",
                        "Daily",
                        "Hourly",
                        "Minutely",
                        "Secondly",
                        "Custom"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "Granularity",
                        "modelAsString": true
                    }
                },
                "granularityAmount": {
                    "format": "int32",
                    "description": "if granularity is custom,it is required.",
                    "type": "integer"
                },
                "allUpIdentification": {
                    "description": "the identification value for the row of calculated all-up value.",
                    "type": "string"
                },
                "needRollup": {
                    "description": "mark if the data feed need rollup",
                    "enum": [
                        "NotRollup",
                        "RollupBySystem",
                        "RollupByUser"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "NeedRollupEnum",
                        "modelAsString": true
                    }
                },
                "fillMissingPointForAd": {
                    "description": "the type of fill missing point for anomaly detection",
                    "enum": [
                        "PreviousValue",
                        "CustomizeValue",
                        "NotFillValue"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "FillMissingPointType",
                        "modelAsString": true
                    }
                },
                "fillMissingPointForAdValue": {
                    "format": "double",
                    "description": "the value of fill missing point for anomaly detection",
                    "type": "number"
                },
                "rollUpMethod": {
                    "description": "roll up method",
                    "enum": [
                        "None",
                        "Sum",
                        "Max",
                        "Min",
                        "Avg",
                        "Count"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "RollUpMethod",
                        "modelAsString": true
                    }
                },
                "stopRetryAfterInSeconds": {
                    "format": "int64",
                    "description": "stop retry data ingestion after the data slice first schedule time in seconds.",
                    "type": "integer"
                },
                "rollUpColumns": {
                    "description": "roll up columns",
                    "type": "string"
                },
                "minRetryIntervalInSeconds": {
                    "format": "int64",
                    "description": "the min retry interval for failed data ingestion tasks.",
                    "type": "integer"
                },
                "maxConcurrency": {
                    "format": "int32",
                    "description": "the max concurrency of data ingestion queries against user data source. 0 means no limitation.",
                    "default": 0,
                    "maximum": 30.0,
                    "minimum": 0.0,
                    "type": "integer"
                },
                "datafeedDescription": {
                    "description": "data feed description",
                    "type": "string"
                },
                "viewMode": {
                    "description": "data feed access mode, default is Private",
                    "default": 0,
                    "enum": [
                        "Private",
                        "Public"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "ViewMode",
                        "modelAsString": true
                    }
                },
                "admins": {
                    "description": "data feed administrator",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "viewers": {
                    "description": "data feed viewer",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "creator": {
                    "description": "data feed creator",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "description": "data feed status",
                    "default": 0,
                    "enum": [
                        "Active",
                        "Paused"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "EntityStatus",
                        "modelAsString": true
                    }
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "data feed created time",
                    "type": "string",
                    "readOnly": true
                },
                "isAdmin": {
                    "description": "the query user is one of data feed administrator or not",
                    "type": "boolean",
                    "readOnly": true
                },
                "actionLinkTemplate": {
                    "description": "action link for alert",
                    "type": "string"
                }
            },
            "discriminator": "dataSourceType"
        },
        "Metric": {
            "required": [
                "metricName"
            ],
            "type": "object",
            "properties": {
                "metricName": {
                    "description": "metric name",
                    "type": "string"
                },
                "metricDisplayName": {
                    "description": "metric display name",
                    "pattern": "[.a-zA-Z0-9_-]+",
                    "type": "string"
                },
                "metricDescription": {
                    "description": "metric description",
                    "type": "string"
                }
            }
        },
        "Dimension": {
            "required": [
                "dimensionName"
            ],
            "type": "object",
            "properties": {
                "dimensionName": {
                    "description": "dimension name",
                    "type": "string"
                },
                "dimensionDisplayName": {
                    "description": "dimension display name",
                    "pattern": "[.a-zA-Z0-9_-]+",
                    "type": "string"
                }
            }
        },
        "DatafeedName": {
            "type": "object",
            "properties": {
                "datafeedName": {
                    "description": "data feed name",
                    "type": "string"
                }
            }
        },
        "IngestionConfig": {
            "type": "object",
            "properties": {
                "dataStartFrom": {
                    "format": "date-time",
                    "description": "ingestion start time",
                    "type": "string"
                },
                "startOffsetInSeconds": {
                    "format": "int64",
                    "description": "the time that the beginning of data ingestion task will delay for every data slice according to this offset.",
                    "default": 0,
                    "type": "integer"
                },
                "maxQueryPerMinute": {
                    "format": "float",
                    "description": "the max number of queries per minute against user data source for data ingestion. A nagative value means no limitation.",
                    "default": -1,
                    "type": "number"
                },
                "stopRetryAfterInSeconds": {
                    "format": "int64",
                    "description": "stop retry data ingestion after the data slice first schedule time in seconds.",
                    "type": "integer"
                },
                "minRetryIntervalInSeconds": {
                    "format": "int64",
                    "description": "the min retry interval for failed data ingestion tasks.",
                    "type": "integer"
                },
                "maxConcurrency": {
                    "format": "int32",
                    "description": "the max concurrency of data ingestion queries against user data source. 0 means no limitation.",
                    "default": 0,
                    "maximum": 30.0,
                    "minimum": 0.0,
                    "type": "integer"
                }
            }
        },
        "FillMissingPointConfig": {
            "type": "object",
            "properties": {
                "fillMissingPointForAd": {
                    "description": "the type of fill missing point for anomaly detection",
                    "enum": [
                        "PreviousValue",
                        "CustomizeValue",
                        "NotFillValue"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "FillMissingPointType",
                        "modelAsString": true
                    }
                },
                "fillMissingPointForAdValue": {
                    "format": "double",
                    "description": "the value of fill missing point for anomaly detection",
                    "type": "number"
                }
            }
        },
        "RollUpConfig": {
            "type": "object",
            "properties": {
                "rollUpMethod": {
                    "description": "roll up method",
                    "enum": [
                        "None",
                        "Sum",
                        "Max",
                        "Min",
                        "Avg",
                        "Count"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "RollUpMethod",
                        "modelAsString": true
                    }
                },
                "allUpIdentification": {
                    "description": "the identification value for the row of calculated all-up value.",
                    "type": "string"
                },
                "needRollup": {
                    "description": "mark if the data feed need rollup",
                    "enum": [
                        "NotRollup",
                        "RollupBySystem",
                        "RollupByUser"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "NeedRollupEnum",
                        "modelAsString": true
                    }
                },
                "rollUpColumns": {
                    "description": "roll up columns",
                    "type": "string"
                }
            }
        },
        "Activation": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "data feed status",
                    "enum": [
                        "Active",
                        "Paused"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "EntityStatus",
                        "modelAsString": true
                    }
                }
            }
        },
        "ViewModeConfig": {
            "type": "object",
            "properties": {
                "viewMode": {
                    "description": "data feed access mode, default is Private",
                    "enum": [
                        "Private",
                        "Public"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "ViewMode",
                        "modelAsString": true
                    }
                }
            }
        },
        "EntityPrivilegeControl": {
            "type": "object",
            "properties": {
                "userPrincipal": {
                    "description": "user principal",
                    "type": "string"
                },
                "userType": {
                    "enum": [
                        "Admin",
                        "Viewer"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "RoleType",
                        "modelAsString": true
                    }
                }
            }
        },
        "SaveAnomalyFeedbackRequest": {
            "required": [
                "dimension",
                "startTime",
                "endTime",
                "value"
            ],
            "type": "object",
            "properties": {
                "dimension": {
                    "description": "dimension",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "startTime": {
                    "format": "date-time",
                    "description": "start time to annotate, included",
                    "type": "string"
                },
                "endTime": {
                    "format": "date-time",
                    "description": "end time to annotate, excluded",
                    "type": "string"
                },
                "value": {
                    "description": "anomaly value to annotate",
                    "enum": [
                        "Anomaly",
                        "NotAnomaly"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "AnomalyValue",
                        "modelAsString": true
                    }
                },
                "comment": {
                    "description": "comment of this annotation",
                    "type": "string"
                }
            }
        },
        "DeleteAnomalyFeedbackRequest": {
            "required": [
                "dimension",
                "startTime",
                "endTime"
            ],
            "type": "object",
            "properties": {
                "dimension": {
                    "description": "dimension",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "startTime": {
                    "format": "date-time",
                    "description": "start time of feedback timestamp to delete, included",
                    "type": "string"
                },
                "endTime": {
                    "format": "date-time",
                    "description": "end time of feedback timestamp to delete, excluded",
                    "type": "string"
                }
            }
        },
        "LoadFeedbackRequest": {
            "required": [
                "dimension",
                "startTime",
                "endTime"
            ],
            "type": "object",
            "properties": {
                "dimension": {
                    "description": "dimension",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "startTime": {
                    "format": "date-time",
                    "description": "start time of feedback to load, included",
                    "type": "string"
                },
                "endTime": {
                    "format": "date-time",
                    "description": "end time of feedback to load, excluded",
                    "type": "string"
                }
            }
        },
        "AnomalyFeedbackItem": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "anomaly feedback unique id",
                    "type": "integer"
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "feedback create time",
                    "type": "string"
                },
                "modifiedTime": {
                    "format": "date-time",
                    "description": "feedback lastest modified time",
                    "type": "string"
                },
                "deleted": {
                    "format": "int32",
                    "description": "is feedback deleted",
                    "type": "integer"
                },
                "metricId": {
                    "description": "metric id of feedback",
                    "type": "string"
                },
                "tagset": {
                    "description": "tagset of feedback",
                    "type": "string"
                },
                "seriesId": {
                    "description": "series id of feedback",
                    "type": "string"
                },
                "timestamp": {
                    "format": "date-time",
                    "description": "timestamp of feedback point",
                    "type": "string"
                },
                "userPrincipal": {
                    "description": "the email of user who give this feedback",
                    "type": "string"
                },
                "isAnomaly": {
                    "description": "is this point annotated as anomaly",
                    "type": "boolean"
                },
                "isDetectedAnomaly": {
                    "description": "is this point detected as anomaly",
                    "type": "boolean"
                },
                "comment": {
                    "description": "comment of this feedback annotation",
                    "type": "string"
                }
            }
        },
        "SaveChangePointFeedbackRequest": {
            "required": [
                "dimension",
                "timestamp",
                "value"
            ],
            "type": "object",
            "properties": {
                "dimension": {
                    "description": "dimension",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "format": "date-time",
                    "description": "timestamp",
                    "type": "string"
                },
                "value": {
                    "description": "change point value to annotate",
                    "enum": [
                        "ChangePoint",
                        "NotChangePoint"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "ChangePointValue",
                        "modelAsString": true
                    }
                }
            }
        },
        "DeleteChangePointFeedbackRequest": {
            "required": [
                "dimension",
                "timestamp"
            ],
            "type": "object",
            "properties": {
                "dimension": {
                    "description": "dimension",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "format": "date-time",
                    "description": "timestamp",
                    "type": "string"
                }
            }
        },
        "ChangePointFeedbackItem": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "change point feedback unique id",
                    "type": "integer"
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "feedback create time",
                    "type": "string"
                },
                "modifiedTime": {
                    "format": "date-time",
                    "description": "feedback lastest modified time",
                    "type": "string"
                },
                "deleted": {
                    "format": "int32",
                    "description": "is feedback deleted",
                    "type": "integer"
                },
                "metricId": {
                    "description": "metric id of feedback",
                    "type": "string"
                },
                "tagset": {
                    "description": "tagset of feedback",
                    "type": "string"
                },
                "seriesId": {
                    "description": "series id of feedback",
                    "type": "string"
                },
                "timestamp": {
                    "format": "date-time",
                    "description": "timestamp of feedback point",
                    "type": "string"
                },
                "userPrincipal": {
                    "description": "the email of user who give this feedback",
                    "type": "string"
                },
                "isChangePoint": {
                    "description": "is this point annotated as change point",
                    "type": "boolean"
                }
            }
        },
        "SavePeriodFeedbackRequest": {
            "required": [
                "dimension",
                "value"
            ],
            "type": "object",
            "properties": {
                "dimension": {
                    "description": "dimension",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "value": {
                    "$ref": "#/definitions/PeriodValue",
                    "description": "period feedback value"
                }
            }
        },
        "PeriodValue": {
            "required": [
                "periodAmount"
            ],
            "type": "object",
            "properties": {
                "periodAmount": {
                    "format": "int64",
                    "description": "amount of intervals of one period (one interval is one granularity)",
                    "type": "integer"
                }
            }
        },
        "DeletePeriodFeedbackRequest": {
            "required": [
                "dimension"
            ],
            "type": "object",
            "properties": {
                "dimension": {
                    "description": "dimension",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "LoadPeriodFeedbackRequest": {
            "required": [
                "dimension"
            ],
            "type": "object",
            "properties": {
                "dimension": {
                    "description": "dimension",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PeriodFeedbackItem": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "description": "period feedback unique id",
                    "type": "integer"
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "feedback create time",
                    "type": "string"
                },
                "modifiedTime": {
                    "format": "date-time",
                    "description": "feedback lastest modified time",
                    "type": "string"
                },
                "deleted": {
                    "format": "int32",
                    "description": "is feedback deleted",
                    "type": "integer"
                },
                "metricId": {
                    "description": "metric id of feedback",
                    "type": "string"
                },
                "tagset": {
                    "description": "tagset of feedback",
                    "type": "string"
                },
                "seriesId": {
                    "description": "series id of feedback",
                    "type": "string"
                },
                "userPrincipal": {
                    "description": "the email of user who give this feedback",
                    "type": "string"
                },
                "periodAmount": {
                    "format": "int64",
                    "description": "amount of intervals of one period (one interval is one granularity)",
                    "type": "integer"
                }
            }
        },
        "HookInfo": {
            "required": [
                "hookName",
                "hookType",
                "hookParameter"
            ],
            "type": "object",
            "properties": {
                "hookId": {
                    "format": "uuid",
                    "description": "Hook unique id",
                    "type": "string",
                    "readOnly": true
                },
                "hookName": {
                    "description": "hook unique name",
                    "type": "string"
                },
                "hookType": {
                    "description": "hook type",
                    "enum": [
                        "Web"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "HookType",
                        "modelAsString": true
                    }
                },
                "externalLink": {
                    "description": "hook external link",
                    "type": "string"
                },
                "description": {
                    "description": "hook description",
                    "type": "string"
                },
                "hookParameter": {
                    "$ref": "#/definitions/WebHookParameter",
                    "description": "hook parameters"
                },
                "admins": {
                    "description": "hook administrators",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "WebHookParameter": {
            "required": [
                "endpoint"
            ],
            "type": "object",
            "properties": {
                "endpoint": {
                    "description": "API address, will be called when alert is triggered, only support POST http method",
                    "type": "string"
                },
                "username": {
                    "description": "Http Basic autherization",
                    "type": "string"
                },
                "password": {
                    "description": "Http Basic autherization",
                    "type": "string"
                },
                "headers": {
                    "description": "Customize headers in api call",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "HookUser": {
            "type": "object",
            "properties": {
                "userPrincipal": {
                    "type": "string"
                }
            }
        },
        "IngestionStatusByDataFeed": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "data feed ingestion status list by data slice timestamp.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IngestionStatus"
                    }
                },
                "datafeedId": {
                    "description": "data feed uuid.",
                    "type": "string"
                },
                "startTime": {
                    "format": "date-time",
                    "description": "the start point of time range for getting data ingestion status.",
                    "type": "string"
                },
                "endTime": {
                    "format": "date-time",
                    "description": "the end point of time range for getting data ingestion status.",
                    "type": "string"
                }
            }
        },
        "IngestionStatus": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "format": "date-time",
                    "description": "data slice timestamp.",
                    "type": "string"
                },
                "status": {
                    "description": "latest ingestion task status for this data slice.",
                    "type": "string"
                },
                "message": {
                    "description": "the trimmed message of last ingestion job.",
                    "type": "string"
                }
            }
        },
        "IngestionStatusResetOption": {
            "type": "object",
            "properties": {
                "startTime": {
                    "format": "date-time",
                    "description": "the start point of time range to reset data ingestion status.",
                    "type": "string"
                },
                "endTime": {
                    "format": "date-time",
                    "description": "the end point of time range to reset data ingestion status.",
                    "type": "string"
                }
            }
        },
        "DataFeedIngestionLatestSuccess": {
            "type": "object",
            "properties": {
                "latestSuccessTimestamp": {
                    "format": "date-time",
                    "description": "the timestamp of lastest success ingestion job.\r\nnull indicates not available",
                    "type": "string"
                }
            }
        },
        "DataFeedIngestionLatestActive": {
            "type": "object",
            "properties": {
                "latestActiveTimestamp": {
                    "format": "date-time",
                    "description": "the timestamp of lastest ingestion job with status update.\r\nnull indicates not available",
                    "type": "string"
                }
            }
        },
        "MetricSeries": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "dimension name and value pair list",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DimValueCombineItem"
                    }
                }
            }
        },
        "DimValueCombineItem": {
            "type": "object",
            "properties": {
                "metricId": {
                    "description": "metric unique id",
                    "type": "string"
                },
                "seriesId": {
                    "description": "series unique id",
                    "type": "string"
                },
                "dimensions": {
                    "description": "dimension name and value pair",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SeriesDataQuery": {
            "required": [
                "startTime",
                "endTime",
                "metricId"
            ],
            "type": "object",
            "properties": {
                "startTime": {
                    "format": "date-time",
                    "description": "start time of query a time series data, and format should be yyyy-MM-ddThh:mm:ssZ",
                    "type": "string"
                },
                "endTime": {
                    "format": "date-time",
                    "description": "start time of query a time series data, and format should be yyyy-MM-ddThh:mm:ssZ",
                    "type": "string"
                },
                "metricId": {
                    "description": "metric unique id",
                    "type": "string"
                },
                "dimension": {
                    "description": "dimension name and value pair",
                    "default": "{}",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "SeriesDataItem": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/SeriesItem",
                    "description": "time series identity"
                },
                "fields": {
                    "description": "keys of the data related to this time series",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "values": {
                    "description": "values of the data related to this time series, grouped by timestamp",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "SeriesItem": {
            "type": "object",
            "properties": {
                "metricId": {
                    "description": "metric unique id",
                    "type": "string"
                },
                "seriesId": {
                    "description": "series id",
                    "type": "string"
                },
                "dimension": {
                    "description": "dimension name and value pair",
                    "default": "{}",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "PresetEvent": {
            "required": [
                "holidayEventConfig",
                "cycleEventConfig"
            ],
            "type": "object",
            "properties": {
                "metricId": {
                    "description": "Metric unique id",
                    "type": "string",
                    "readOnly": true
                },
                "holidayEventConfig": {
                    "$ref": "#/definitions/HolidayEventConfig",
                    "description": "Holiday event config"
                },
                "cycleEventConfig": {
                    "$ref": "#/definitions/CycleEventConfig",
                    "description": "Cycle event config"
                }
            }
        },
        "HolidayEventConfig": {
            "required": [
                "holidayEventEnabled"
            ],
            "type": "object",
            "properties": {
                "holidayEventEnabled": {
                    "description": "Switcher stands for enable holiday event or not.",
                    "default": false,
                    "type": "boolean"
                },
                "holidayEventStrategy": {
                    "description": "Holiday event strategy stands for SuppressHoliday or HolidayAsWeekend.",
                    "enum": [
                        "HolidayAsWeekend",
                        "SuppressHoliday"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "HolidayEventStrategy",
                        "modelAsString": true
                    }
                },
                "dimensionAsCountry": {
                    "description": "Dimension stands for a country.",
                    "type": "string"
                },
                "countryForAll": {
                    "description": "Standard country code stands for whole metric belongs to one country.",
                    "type": "string"
                },
                "countryOfInterest": {
                    "description": "A mapping table stands for dimension value and its standard country code.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "holidayOption": {
                    "description": "Holiday option stands for All, PTO, or NonPTO.",
                    "enum": [
                        "NonPTO",
                        "All",
                        "PTO"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "HolidayOption",
                        "modelAsString": true
                    }
                },
                "leftExpandDay": {
                    "format": "int32",
                    "description": "Day number stands for expanded days before holiday.",
                    "default": 0,
                    "maximum": 365.0,
                    "minimum": 0.0,
                    "type": "integer"
                },
                "rightExpandDay": {
                    "format": "int32",
                    "description": "Day number stands for expanded days after holiday.",
                    "default": 0,
                    "maximum": 365.0,
                    "minimum": 0.0,
                    "type": "integer"
                }
            }
        },
        "CycleEventConfig": {
            "required": [
                "cycleEventEnabled"
            ],
            "type": "object",
            "properties": {
                "cycleEventEnabled": {
                    "description": "Switcher stands for enable cycle event or not.",
                    "default": false,
                    "type": "boolean"
                },
                "cycleOption": {
                    "description": "Cycle option stands for YoY, MoM, WoW or DoD.",
                    "enum": [
                        "None",
                        "YoY",
                        "MoM",
                        "WoW",
                        "DoD"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "CycleOption",
                        "modelAsString": true
                    }
                },
                "cycleEventStrictModeEnabled": {
                    "description": "Switcher stands for enable cycle event strict mode or not.",
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "DetectionResultQuery": {
            "required": [
                "startTime",
                "endTime"
            ],
            "type": "object",
            "properties": {
                "startTime": {
                    "format": "date-time",
                    "description": "start time",
                    "type": "string"
                },
                "endTime": {
                    "format": "date-time",
                    "description": "end time",
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/definitions/DetectionFilterCondition",
                    "description": "filter"
                }
            }
        },
        "DetectionFilterCondition": {
            "type": "object",
            "properties": {
                "seriesFilter": {
                    "description": "series filter",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SeriesIdentity"
                    }
                },
                "groupFilter": {
                    "$ref": "#/definitions/DimensionGroupIdentity",
                    "description": "series group filter"
                },
                "severityFilter": {
                    "$ref": "#/definitions/SeverityFilterCondition",
                    "description": "severity filter"
                }
            }
        },
        "SeverityFilterCondition": {
            "type": "object",
            "properties": {
                "min": {
                    "description": "min severity",
                    "enum": [
                        "Low",
                        "Medium",
                        "High"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "Severity",
                        "modelAsString": true
                    }
                },
                "max": {
                    "description": "max severity",
                    "enum": [
                        "Low",
                        "Medium",
                        "High"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                        "name": "Severity",
                        "modelAsString": true
                    }
                }
            }
        },
        "AnomalyResult": {
            "type": "object",
            "properties": {
                "metricId": {
                    "format": "uuid",
                    "description": "metric unique id\r\n\r\nonly return for alerting anomaly result",
                    "type": "string"
                },
                "anomalyDetectionConfigurationId": {
                    "format": "uuid",
                    "description": "anomaly detection configuration unique id\r\n\r\nonly return for alerting anomaly result",
                    "type": "string"
                },
                "timestamp": {
                    "format": "date-time",
                    "description": "anomaly time",
                    "type": "string"
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "created time\r\n\r\nonly return for alerting result",
                    "type": "string"
                },
                "modifiedTime": {
                    "format": "date-time",
                    "description": "modified time\r\n\r\nonly return for alerting result",
                    "type": "string"
                },
                "tagSet": {
                    "description": "tag set",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "seriesId": {
                    "description": "series id",
                    "type": "string"
                },
                "value": {
                    "format": "double",
                    "description": "value",
                    "type": "number"
                },
                "properties": {
                    "description": "anomaly properties",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "AlertingResultQuery": {
            "required": [
                "startTime",
                "endTime"
            ],
            "type": "object",
            "properties": {
                "metricId": {
                    "format": "uuid",
                    "description": "metric unique id",
                    "type": "string"
                },
                "anomalyDetectionConfigurationId": {
                    "format": "uuid",
                    "description": "anomaly detection configuration unique id",
                    "type": "string"
                },
                "startTime": {
                    "format": "date-time",
                    "description": "start time",
                    "type": "string"
                },
                "endTime": {
                    "format": "date-time",
                    "description": "end time",
                    "type": "string"
                },
                "timeMode": {
                    "format": "int32",
                    "description": "time mode \r\n\r\n0: alert time, 1: create time, 2: update time",
                    "maximum": 2.0,
                    "minimum": 0.0,
                    "type": "integer"
                }
            }
        },
        "IncidentResult": {
            "type": "object",
            "properties": {
                "metricId": {
                    "format": "uuid",
                    "description": "metric unique id\r\n\r\nonly return for alerting incident result",
                    "type": "string"
                },
                "anomalyDetectionConfigurationId": {
                    "format": "uuid",
                    "description": "anomaly detection configuration unique id\r\n\r\nonly return for alerting incident result",
                    "type": "string"
                },
                "rootNode": {
                    "$ref": "#/definitions/AnomalyResult",
                    "description": "root node"
                },
                "properties": {
                    "description": "incident properties",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "IncidentTreeQuery": {
            "required": [
                "timestamp"
            ],
            "type": "object",
            "properties": {
                "timestamp": {
                    "format": "date-time",
                    "description": "timestamp",
                    "type": "string"
                },
                "anomaly": {
                    "$ref": "#/definitions/SeriesIdentity",
                    "description": "anomaly"
                }
            }
        },
        "IncidentTree": {
            "type": "object",
            "properties": {
                "incidentRootNodes": {
                    "description": "root nodes",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SeriesIdentity"
                    }
                },
                "incidentTree": {
                    "description": "parent-child relation among nodes",
                    "type": "object",
                    "additionalProperties": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "points": {
                    "description": "all nodes",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SeriesIdentity"
                    }
                }
            }
        },
        "TimeSeriesGroup": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "groupId": {
                    "format": "uuid",
                    "description": "Time series group unique id",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Time series group name",
                    "type": "string"
                },
                "description": {
                    "description": "Time series group description",
                    "type": "string"
                },
                "transitiveDependencyCheck": {
                    "description": "Whether to check transitive dependency",
                    "type": "boolean"
                },
                "status": {
                    "description": "Time series group status",
                    "type": "string"
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Time series group created time",
                    "type": "string",
                    "readOnly": true
                },
                "creator": {
                    "description": "Time series group creator",
                    "type": "string",
                    "readOnly": true
                },
                "isAdmin": {
                    "description": "Whether is an admin of the time series group",
                    "type": "boolean",
                    "readOnly": true
                },
                "seriesSets": {
                    "description": "List of series sets",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeSeriesGroupSeriesSet"
                    },
                    "readOnly": true
                },
                "appInstances": {
                    "description": "List of application instances",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeSeriesGroupAppInstance"
                    },
                    "readOnly": true
                },
                "admins": {
                    "description": "Time series group administrator group",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "viewers": {
                    "description": "Time series group viewer group",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                }
            }
        },
        "TimeSeriesGroupSeriesSet": {
            "required": [
                "seriesSetName",
                "metricId",
                "dimensionFilter"
            ],
            "type": "object",
            "properties": {
                "seriesSetId": {
                    "description": "Series set unique ID",
                    "type": "string",
                    "readOnly": true
                },
                "seriesSetName": {
                    "description": "Series set name",
                    "type": "string"
                },
                "metricId": {
                    "description": "Meric ID",
                    "type": "string"
                },
                "dimensionFilter": {
                    "description": "Dimension filters to define a time series set",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metricMeta": {
                    "$ref": "#/definitions/TimeSeriesGroupMetricMeta",
                    "description": "Metric meta info [ReadOnly]",
                    "readOnly": true
                }
            }
        },
        "TimeSeriesGroupAppInstance": {
            "type": "object",
            "properties": {
                "appId": {
                    "format": "uuid",
                    "description": "Application unique id",
                    "type": "string",
                    "readOnly": true
                },
                "instanceName": {
                    "description": "Application instance name",
                    "type": "string"
                },
                "parameters": {
                    "description": "Parameters for the application instance",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "status": {
                    "description": "Application instance status",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "TimeSeriesGroupMetricMeta": {
            "type": "object",
            "properties": {
                "datafeedId": {
                    "description": "Data feed unique ID",
                    "type": "string",
                    "readOnly": true
                },
                "datafeedName": {
                    "description": "Data feed name",
                    "type": "string",
                    "readOnly": true
                },
                "metricName": {
                    "description": "metric name",
                    "type": "string",
                    "readOnly": true
                },
                "granularityName": {
                    "description": "Data feed granularity",
                    "type": "string",
                    "readOnly": true
                },
                "granularityAmount": {
                    "format": "int32",
                    "description": "Data feed gruanlarity in seconds when granulairty is Custom",
                    "type": "integer",
                    "readOnly": true
                },
                "dataStartFrom": {
                    "format": "date-time",
                    "description": "Data feed start time",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "TimeSeriesGroupCount": {
            "type": "object",
            "properties": {
                "count": {
                    "format": "int64",
                    "description": "Count of time series group",
                    "type": "integer"
                }
            }
        },
        "TimeSeriesGroupSeriesSetName": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Time series set name",
                    "type": "string"
                }
            }
        },
        "DeleteTimeSeriesGroupSeriesSetResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Delete time series set response message",
                    "type": "string"
                },
                "isDeleted": {
                    "description": "Flag stands for whether time series set is deleted",
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "TimeSeriesGroupApps": {
            "type": "object",
            "properties": {
                "values": {
                    "description": "List of time series group applications",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeSeriesGroupApp"
                    }
                }
            }
        },
        "TimeSeriesGroupApp": {
            "type": "object",
            "properties": {
                "appId": {
                    "format": "uuid",
                    "description": "Application unique id",
                    "type": "string",
                    "readOnly": true
                },
                "appName": {
                    "description": "Application name",
                    "type": "string"
                },
                "displayName": {
                    "description": "Application display name",
                    "type": "string"
                },
                "description": {
                    "description": "Application description",
                    "type": "string"
                },
                "stage": {
                    "description": "Application stage",
                    "type": "string"
                },
                "isShown": {
                    "description": "Whether the application should displayed in UI",
                    "type": "boolean"
                },
                "config": {
                    "description": "Configurations for the application",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "settings": {
                    "description": "Settings for the application",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "TimeSeriesGroupAppInstanceResult": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "format": "date-time",
                    "description": "Timestamp for the time series group",
                    "type": "string"
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Timestamp the result is created",
                    "type": "string"
                },
                "result": {
                    "description": "Result",
                    "type": "object"
                },
                "parameters": {
                    "description": "Parameters used when the instance is calculated",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "TimeSeriesGroupAppInstanceHistory": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "List of time series group application isntance result",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeSeriesGroupAppInstanceResult"
                    }
                }
            }
        },
        "SQLServerDatafeed": {
            "required": [
                "dataSourceParameter",
                "datafeedName",
                "metrics",
                "dimensions",
                "dataStartFrom",
                "dataSourceType",
                "granularityName"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatafeedDetailInfo"
                },
                {
                    "required": [
                        "dataSourceParameter",
                        "datafeedName",
                        "metrics",
                        "dimensions",
                        "dataStartFrom",
                        "dataSourceType",
                        "granularityName"
                    ],
                    "type": "object",
                    "properties": {
                        "dataSourceParameter": {
                            "$ref": "#/definitions/SQLSourceParameter"
                        },
                        "datafeedId": {
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                        },
                        "datafeedName": {
                            "type": "string"
                        },
                        "metrics": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Metric"
                            }
                        },
                        "dimensions": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dimension"
                            }
                        },
                        "dataStartFrom": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "dataSourceType": {
                            "enum": [
                                "SqlServer",
                                "Cube",
                                "JSON",
                                "AzureBlob",
                                "Kusto",
                                "AzureTable",
                                "MySql",
                                "PostgreSql",
                                "InfluxDB",
                                "EventHub",
                                "HttpRequest",
                                "CosmosDB",
                                "MongoDB"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                            }
                        },
                        "timestampColumn": {
                            "type": "string"
                        },
                        "startOffsetInSeconds": {
                            "format": "int64",
                            "default": 0,
                            "type": "integer"
                        },
                        "maxQueryPerMinute": {
                            "format": "float",
                            "default": -1,
                            "type": "number"
                        },
                        "granularityName": {
                            "enum": [
                                "Yearly",
                                "Monthly",
                                "Weekly",
                                "Daily",
                                "Hourly",
                                "Minutely",
                                "Secondly",
                                "Custom"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "Granularity",
                                "modelAsString": true
                            }
                        },
                        "granularityAmount": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "allUpIdentification": {
                            "type": "string"
                        },
                        "needRollup": {
                            "enum": [
                                "NotRollup",
                                "RollupBySystem",
                                "RollupByUser"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "NeedRollupEnum",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAd": {
                            "enum": [
                                "PreviousValue",
                                "CustomizeValue",
                                "NotFillValue"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "FillMissingPointType",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAdValue": {
                            "format": "double",
                            "type": "number"
                        },
                        "rollUpMethod": {
                            "enum": [
                                "None",
                                "Sum",
                                "Max",
                                "Min",
                                "Avg",
                                "Count"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "RollUpMethod",
                                "modelAsString": true
                            }
                        },
                        "stopRetryAfterInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "rollUpColumns": {
                            "type": "string"
                        },
                        "minRetryIntervalInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "maxConcurrency": {
                            "format": "int32",
                            "default": 0,
                            "maximum": 30.0,
                            "minimum": 0.0,
                            "type": "integer"
                        },
                        "datafeedDescription": {
                            "type": "string"
                        },
                        "viewMode": {
                            "default": 0,
                            "enum": [
                                "Private",
                                "Public"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "ViewMode",
                                "modelAsString": true
                            }
                        },
                        "admins": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "viewers": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "creator": {
                            "type": "string",
                            "readOnly": true
                        },
                        "status": {
                            "default": 0,
                            "enum": [
                                "Active",
                                "Paused"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "EntityStatus",
                                "modelAsString": true
                            }
                        },
                        "createdTime": {
                            "format": "date-time",
                            "type": "string",
                            "readOnly": true
                        },
                        "isAdmin": {
                            "type": "boolean",
                            "readOnly": true
                        },
                        "actionLinkTemplate": {
                            "type": "string"
                        }
                    }
                }
            ],
            "properties": {},
            "x-ms-discriminator-value": "dataSourceType"
        },
        "SQLSourceParameter": {
            "required": [
                "connectionString",
                "script"
            ],
            "type": "object",
            "properties": {
                "connectionString": {
                    "description": "Database connection string",
                    "type": "string"
                },
                "script": {
                    "description": "Query script",
                    "type": "string"
                }
            }
        },
        "PostgreSqlDatafeed": {
            "required": [
                "dataSourceParameter",
                "datafeedName",
                "metrics",
                "dimensions",
                "dataStartFrom",
                "dataSourceType",
                "granularityName"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatafeedDetailInfo"
                },
                {
                    "required": [
                        "dataSourceParameter",
                        "datafeedName",
                        "metrics",
                        "dimensions",
                        "dataStartFrom",
                        "dataSourceType",
                        "granularityName"
                    ],
                    "type": "object",
                    "properties": {
                        "dataSourceParameter": {
                            "$ref": "#/definitions/SQLSourceParameter"
                        },
                        "datafeedId": {
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                        },
                        "datafeedName": {
                            "type": "string"
                        },
                        "metrics": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Metric"
                            }
                        },
                        "dimensions": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dimension"
                            }
                        },
                        "dataStartFrom": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "dataSourceType": {
                            "enum": [
                                "SqlServer",
                                "Cube",
                                "JSON",
                                "AzureBlob",
                                "Kusto",
                                "AzureTable",
                                "MySql",
                                "PostgreSql",
                                "InfluxDB",
                                "EventHub",
                                "HttpRequest",
                                "CosmosDB",
                                "MongoDB"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                            }
                        },
                        "timestampColumn": {
                            "type": "string"
                        },
                        "startOffsetInSeconds": {
                            "format": "int64",
                            "default": 0,
                            "type": "integer"
                        },
                        "maxQueryPerMinute": {
                            "format": "float",
                            "default": -1,
                            "type": "number"
                        },
                        "granularityName": {
                            "enum": [
                                "Yearly",
                                "Monthly",
                                "Weekly",
                                "Daily",
                                "Hourly",
                                "Minutely",
                                "Secondly",
                                "Custom"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "Granularity",
                                "modelAsString": true
                            }
                        },
                        "granularityAmount": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "allUpIdentification": {
                            "type": "string"
                        },
                        "needRollup": {
                            "enum": [
                                "NotRollup",
                                "RollupBySystem",
                                "RollupByUser"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "NeedRollupEnum",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAd": {
                            "enum": [
                                "PreviousValue",
                                "CustomizeValue",
                                "NotFillValue"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "FillMissingPointType",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAdValue": {
                            "format": "double",
                            "type": "number"
                        },
                        "rollUpMethod": {
                            "enum": [
                                "None",
                                "Sum",
                                "Max",
                                "Min",
                                "Avg",
                                "Count"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "RollUpMethod",
                                "modelAsString": true
                            }
                        },
                        "stopRetryAfterInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "rollUpColumns": {
                            "type": "string"
                        },
                        "minRetryIntervalInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "maxConcurrency": {
                            "format": "int32",
                            "default": 0,
                            "maximum": 30.0,
                            "minimum": 0.0,
                            "type": "integer"
                        },
                        "datafeedDescription": {
                            "type": "string"
                        },
                        "viewMode": {
                            "default": 0,
                            "enum": [
                                "Private",
                                "Public"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "ViewMode",
                                "modelAsString": true
                            }
                        },
                        "admins": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "viewers": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "creator": {
                            "type": "string",
                            "readOnly": true
                        },
                        "status": {
                            "default": 0,
                            "enum": [
                                "Active",
                                "Paused"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "EntityStatus",
                                "modelAsString": true
                            }
                        },
                        "createdTime": {
                            "format": "date-time",
                            "type": "string",
                            "readOnly": true
                        },
                        "isAdmin": {
                            "type": "boolean",
                            "readOnly": true
                        },
                        "actionLinkTemplate": {
                            "type": "string"
                        }
                    }
                }
            ],
            "properties": {},
            "x-ms-discriminator-value": "dataSourceType"
        },
        "MySqlDatafeed": {
            "required": [
                "dataSourceParameter",
                "datafeedName",
                "metrics",
                "dimensions",
                "dataStartFrom",
                "dataSourceType",
                "granularityName"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatafeedDetailInfo"
                },
                {
                    "required": [
                        "dataSourceParameter",
                        "datafeedName",
                        "metrics",
                        "dimensions",
                        "dataStartFrom",
                        "dataSourceType",
                        "granularityName"
                    ],
                    "type": "object",
                    "properties": {
                        "dataSourceParameter": {
                            "$ref": "#/definitions/SQLSourceParameter"
                        },
                        "datafeedId": {
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                        },
                        "datafeedName": {
                            "type": "string"
                        },
                        "metrics": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Metric"
                            }
                        },
                        "dimensions": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dimension"
                            }
                        },
                        "dataStartFrom": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "dataSourceType": {
                            "enum": [
                                "SqlServer",
                                "Cube",
                                "JSON",
                                "AzureBlob",
                                "Kusto",
                                "AzureTable",
                                "MySql",
                                "PostgreSql",
                                "InfluxDB",
                                "EventHub",
                                "HttpRequest",
                                "CosmosDB",
                                "MongoDB"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                            }
                        },
                        "timestampColumn": {
                            "type": "string"
                        },
                        "startOffsetInSeconds": {
                            "format": "int64",
                            "default": 0,
                            "type": "integer"
                        },
                        "maxQueryPerMinute": {
                            "format": "float",
                            "default": -1,
                            "type": "number"
                        },
                        "granularityName": {
                            "enum": [
                                "Yearly",
                                "Monthly",
                                "Weekly",
                                "Daily",
                                "Hourly",
                                "Minutely",
                                "Secondly",
                                "Custom"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "Granularity",
                                "modelAsString": true
                            }
                        },
                        "granularityAmount": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "allUpIdentification": {
                            "type": "string"
                        },
                        "needRollup": {
                            "enum": [
                                "NotRollup",
                                "RollupBySystem",
                                "RollupByUser"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "NeedRollupEnum",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAd": {
                            "enum": [
                                "PreviousValue",
                                "CustomizeValue",
                                "NotFillValue"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "FillMissingPointType",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAdValue": {
                            "format": "double",
                            "type": "number"
                        },
                        "rollUpMethod": {
                            "enum": [
                                "None",
                                "Sum",
                                "Max",
                                "Min",
                                "Avg",
                                "Count"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "RollUpMethod",
                                "modelAsString": true
                            }
                        },
                        "stopRetryAfterInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "rollUpColumns": {
                            "type": "string"
                        },
                        "minRetryIntervalInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "maxConcurrency": {
                            "format": "int32",
                            "default": 0,
                            "maximum": 30.0,
                            "minimum": 0.0,
                            "type": "integer"
                        },
                        "datafeedDescription": {
                            "type": "string"
                        },
                        "viewMode": {
                            "default": 0,
                            "enum": [
                                "Private",
                                "Public"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "ViewMode",
                                "modelAsString": true
                            }
                        },
                        "admins": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "viewers": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "creator": {
                            "type": "string",
                            "readOnly": true
                        },
                        "status": {
                            "default": 0,
                            "enum": [
                                "Active",
                                "Paused"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "EntityStatus",
                                "modelAsString": true
                            }
                        },
                        "createdTime": {
                            "format": "date-time",
                            "type": "string",
                            "readOnly": true
                        },
                        "isAdmin": {
                            "type": "boolean",
                            "readOnly": true
                        },
                        "actionLinkTemplate": {
                            "type": "string"
                        }
                    }
                }
            ],
            "properties": {},
            "x-ms-discriminator-value": "dataSourceType"
        },
        "KustoDatafeed": {
            "required": [
                "dataSourceParameter",
                "datafeedName",
                "metrics",
                "dimensions",
                "dataStartFrom",
                "dataSourceType",
                "granularityName"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatafeedDetailInfo"
                },
                {
                    "required": [
                        "dataSourceParameter",
                        "datafeedName",
                        "metrics",
                        "dimensions",
                        "dataStartFrom",
                        "dataSourceType",
                        "granularityName"
                    ],
                    "type": "object",
                    "properties": {
                        "dataSourceParameter": {
                            "$ref": "#/definitions/SQLSourceParameter"
                        },
                        "datafeedId": {
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                        },
                        "datafeedName": {
                            "type": "string"
                        },
                        "metrics": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Metric"
                            }
                        },
                        "dimensions": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dimension"
                            }
                        },
                        "dataStartFrom": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "dataSourceType": {
                            "enum": [
                                "SqlServer",
                                "Cube",
                                "JSON",
                                "AzureBlob",
                                "Kusto",
                                "AzureTable",
                                "MySql",
                                "PostgreSql",
                                "InfluxDB",
                                "EventHub",
                                "HttpRequest",
                                "CosmosDB",
                                "MongoDB"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                            }
                        },
                        "timestampColumn": {
                            "type": "string"
                        },
                        "startOffsetInSeconds": {
                            "format": "int64",
                            "default": 0,
                            "type": "integer"
                        },
                        "maxQueryPerMinute": {
                            "format": "float",
                            "default": -1,
                            "type": "number"
                        },
                        "granularityName": {
                            "enum": [
                                "Yearly",
                                "Monthly",
                                "Weekly",
                                "Daily",
                                "Hourly",
                                "Minutely",
                                "Secondly",
                                "Custom"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "Granularity",
                                "modelAsString": true
                            }
                        },
                        "granularityAmount": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "allUpIdentification": {
                            "type": "string"
                        },
                        "needRollup": {
                            "enum": [
                                "NotRollup",
                                "RollupBySystem",
                                "RollupByUser"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "NeedRollupEnum",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAd": {
                            "enum": [
                                "PreviousValue",
                                "CustomizeValue",
                                "NotFillValue"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "FillMissingPointType",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAdValue": {
                            "format": "double",
                            "type": "number"
                        },
                        "rollUpMethod": {
                            "enum": [
                                "None",
                                "Sum",
                                "Max",
                                "Min",
                                "Avg",
                                "Count"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "RollUpMethod",
                                "modelAsString": true
                            }
                        },
                        "stopRetryAfterInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "rollUpColumns": {
                            "type": "string"
                        },
                        "minRetryIntervalInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "maxConcurrency": {
                            "format": "int32",
                            "default": 0,
                            "maximum": 30.0,
                            "minimum": 0.0,
                            "type": "integer"
                        },
                        "datafeedDescription": {
                            "type": "string"
                        },
                        "viewMode": {
                            "default": 0,
                            "enum": [
                                "Private",
                                "Public"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "ViewMode",
                                "modelAsString": true
                            }
                        },
                        "admins": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "viewers": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "creator": {
                            "type": "string",
                            "readOnly": true
                        },
                        "status": {
                            "default": 0,
                            "enum": [
                                "Active",
                                "Paused"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "EntityStatus",
                                "modelAsString": true
                            }
                        },
                        "createdTime": {
                            "format": "date-time",
                            "type": "string",
                            "readOnly": true
                        },
                        "isAdmin": {
                            "type": "boolean",
                            "readOnly": true
                        },
                        "actionLinkTemplate": {
                            "type": "string"
                        }
                    }
                }
            ],
            "properties": {},
            "x-ms-discriminator-value": "dataSourceType"
        },
        "AzureCosmosDBDatafeed": {
            "required": [
                "dataSourceParameter",
                "datafeedName",
                "metrics",
                "dimensions",
                "dataStartFrom",
                "dataSourceType",
                "granularityName"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatafeedDetailInfo"
                },
                {
                    "required": [
                        "dataSourceParameter",
                        "datafeedName",
                        "metrics",
                        "dimensions",
                        "dataStartFrom",
                        "dataSourceType",
                        "granularityName"
                    ],
                    "type": "object",
                    "properties": {
                        "dataSourceParameter": {
                            "$ref": "#/definitions/AzureCosmosDBParameter"
                        },
                        "datafeedId": {
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                        },
                        "datafeedName": {
                            "type": "string"
                        },
                        "metrics": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Metric"
                            }
                        },
                        "dimensions": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dimension"
                            }
                        },
                        "dataStartFrom": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "dataSourceType": {
                            "enum": [
                                "SqlServer",
                                "Cube",
                                "JSON",
                                "AzureBlob",
                                "Kusto",
                                "AzureTable",
                                "MySql",
                                "PostgreSql",
                                "InfluxDB",
                                "EventHub",
                                "HttpRequest",
                                "CosmosDB",
                                "MongoDB"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                            }
                        },
                        "timestampColumn": {
                            "type": "string"
                        },
                        "startOffsetInSeconds": {
                            "format": "int64",
                            "default": 0,
                            "type": "integer"
                        },
                        "maxQueryPerMinute": {
                            "format": "float",
                            "default": -1,
                            "type": "number"
                        },
                        "granularityName": {
                            "enum": [
                                "Yearly",
                                "Monthly",
                                "Weekly",
                                "Daily",
                                "Hourly",
                                "Minutely",
                                "Secondly",
                                "Custom"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "Granularity",
                                "modelAsString": true
                            }
                        },
                        "granularityAmount": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "allUpIdentification": {
                            "type": "string"
                        },
                        "needRollup": {
                            "enum": [
                                "NotRollup",
                                "RollupBySystem",
                                "RollupByUser"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "NeedRollupEnum",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAd": {
                            "enum": [
                                "PreviousValue",
                                "CustomizeValue",
                                "NotFillValue"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "FillMissingPointType",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAdValue": {
                            "format": "double",
                            "type": "number"
                        },
                        "rollUpMethod": {
                            "enum": [
                                "None",
                                "Sum",
                                "Max",
                                "Min",
                                "Avg",
                                "Count"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "RollUpMethod",
                                "modelAsString": true
                            }
                        },
                        "stopRetryAfterInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "rollUpColumns": {
                            "type": "string"
                        },
                        "minRetryIntervalInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "maxConcurrency": {
                            "format": "int32",
                            "default": 0,
                            "maximum": 30.0,
                            "minimum": 0.0,
                            "type": "integer"
                        },
                        "datafeedDescription": {
                            "type": "string"
                        },
                        "viewMode": {
                            "default": 0,
                            "enum": [
                                "Private",
                                "Public"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "ViewMode",
                                "modelAsString": true
                            }
                        },
                        "admins": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "viewers": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "creator": {
                            "type": "string",
                            "readOnly": true
                        },
                        "status": {
                            "default": 0,
                            "enum": [
                                "Active",
                                "Paused"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "EntityStatus",
                                "modelAsString": true
                            }
                        },
                        "createdTime": {
                            "format": "date-time",
                            "type": "string",
                            "readOnly": true
                        },
                        "isAdmin": {
                            "type": "boolean",
                            "readOnly": true
                        },
                        "actionLinkTemplate": {
                            "type": "string"
                        }
                    }
                }
            ],
            "properties": {},
            "x-ms-discriminator-value": "dataSourceType"
        },
        "AzureCosmosDBParameter": {
            "required": [
                "connectionString",
                "sqlQuery",
                "database",
                "collectionId"
            ],
            "type": "object",
            "properties": {
                "connectionString": {
                    "description": "Azure CosmosDB connection string",
                    "type": "string"
                },
                "sqlQuery": {
                    "description": "Query script",
                    "type": "string"
                },
                "database": {
                    "description": "Database name",
                    "type": "string"
                },
                "collectionId": {
                    "description": "Collection id",
                    "type": "string"
                }
            }
        },
        "AzureTableDatafeed": {
            "required": [
                "dataSourceParameter",
                "datafeedName",
                "metrics",
                "dimensions",
                "dataStartFrom",
                "dataSourceType",
                "granularityName"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatafeedDetailInfo"
                },
                {
                    "required": [
                        "dataSourceParameter",
                        "datafeedName",
                        "metrics",
                        "dimensions",
                        "dataStartFrom",
                        "dataSourceType",
                        "granularityName"
                    ],
                    "type": "object",
                    "properties": {
                        "dataSourceParameter": {
                            "$ref": "#/definitions/AzureTableParameter"
                        },
                        "datafeedId": {
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                        },
                        "datafeedName": {
                            "type": "string"
                        },
                        "metrics": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Metric"
                            }
                        },
                        "dimensions": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dimension"
                            }
                        },
                        "dataStartFrom": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "dataSourceType": {
                            "enum": [
                                "SqlServer",
                                "Cube",
                                "JSON",
                                "AzureBlob",
                                "Kusto",
                                "AzureTable",
                                "MySql",
                                "PostgreSql",
                                "InfluxDB",
                                "EventHub",
                                "HttpRequest",
                                "CosmosDB",
                                "MongoDB"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                            }
                        },
                        "timestampColumn": {
                            "type": "string"
                        },
                        "startOffsetInSeconds": {
                            "format": "int64",
                            "default": 0,
                            "type": "integer"
                        },
                        "maxQueryPerMinute": {
                            "format": "float",
                            "default": -1,
                            "type": "number"
                        },
                        "granularityName": {
                            "enum": [
                                "Yearly",
                                "Monthly",
                                "Weekly",
                                "Daily",
                                "Hourly",
                                "Minutely",
                                "Secondly",
                                "Custom"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "Granularity",
                                "modelAsString": true
                            }
                        },
                        "granularityAmount": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "allUpIdentification": {
                            "type": "string"
                        },
                        "needRollup": {
                            "enum": [
                                "NotRollup",
                                "RollupBySystem",
                                "RollupByUser"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "NeedRollupEnum",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAd": {
                            "enum": [
                                "PreviousValue",
                                "CustomizeValue",
                                "NotFillValue"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "FillMissingPointType",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAdValue": {
                            "format": "double",
                            "type": "number"
                        },
                        "rollUpMethod": {
                            "enum": [
                                "None",
                                "Sum",
                                "Max",
                                "Min",
                                "Avg",
                                "Count"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "RollUpMethod",
                                "modelAsString": true
                            }
                        },
                        "stopRetryAfterInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "rollUpColumns": {
                            "type": "string"
                        },
                        "minRetryIntervalInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "maxConcurrency": {
                            "format": "int32",
                            "default": 0,
                            "maximum": 30.0,
                            "minimum": 0.0,
                            "type": "integer"
                        },
                        "datafeedDescription": {
                            "type": "string"
                        },
                        "viewMode": {
                            "default": 0,
                            "enum": [
                                "Private",
                                "Public"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "ViewMode",
                                "modelAsString": true
                            }
                        },
                        "admins": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "viewers": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "creator": {
                            "type": "string",
                            "readOnly": true
                        },
                        "status": {
                            "default": 0,
                            "enum": [
                                "Active",
                                "Paused"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "EntityStatus",
                                "modelAsString": true
                            }
                        },
                        "createdTime": {
                            "format": "date-time",
                            "type": "string",
                            "readOnly": true
                        },
                        "isAdmin": {
                            "type": "boolean",
                            "readOnly": true
                        },
                        "actionLinkTemplate": {
                            "type": "string"
                        }
                    }
                }
            ],
            "properties": {},
            "x-ms-discriminator-value": "dataSourceType"
        },
        "AzureTableParameter": {
            "required": [
                "connectionString",
                "script",
                "table"
            ],
            "type": "object",
            "properties": {
                "connectionString": {
                    "description": "Azure table connection string",
                    "type": "string"
                },
                "script": {
                    "description": "Query script",
                    "type": "string"
                },
                "table": {
                    "description": "Table name",
                    "type": "string"
                }
            }
        },
        "EventHubDatafeed": {
            "required": [
                "dataSourceParameter",
                "datafeedName",
                "metrics",
                "dimensions",
                "dataStartFrom",
                "dataSourceType",
                "granularityName"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatafeedDetailInfo"
                },
                {
                    "required": [
                        "dataSourceParameter",
                        "datafeedName",
                        "metrics",
                        "dimensions",
                        "dataStartFrom",
                        "dataSourceType",
                        "granularityName"
                    ],
                    "type": "object",
                    "properties": {
                        "dataSourceParameter": {
                            "$ref": "#/definitions/EventHubParameter"
                        },
                        "datafeedId": {
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                        },
                        "datafeedName": {
                            "type": "string"
                        },
                        "metrics": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Metric"
                            }
                        },
                        "dimensions": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dimension"
                            }
                        },
                        "dataStartFrom": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "dataSourceType": {
                            "enum": [
                                "SqlServer",
                                "Cube",
                                "JSON",
                                "AzureBlob",
                                "Kusto",
                                "AzureTable",
                                "MySql",
                                "PostgreSql",
                                "InfluxDB",
                                "EventHub",
                                "HttpRequest",
                                "CosmosDB",
                                "MongoDB"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                            }
                        },
                        "timestampColumn": {
                            "type": "string"
                        },
                        "startOffsetInSeconds": {
                            "format": "int64",
                            "default": 0,
                            "type": "integer"
                        },
                        "maxQueryPerMinute": {
                            "format": "float",
                            "default": -1,
                            "type": "number"
                        },
                        "granularityName": {
                            "enum": [
                                "Yearly",
                                "Monthly",
                                "Weekly",
                                "Daily",
                                "Hourly",
                                "Minutely",
                                "Secondly",
                                "Custom"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "Granularity",
                                "modelAsString": true
                            }
                        },
                        "granularityAmount": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "allUpIdentification": {
                            "type": "string"
                        },
                        "needRollup": {
                            "enum": [
                                "NotRollup",
                                "RollupBySystem",
                                "RollupByUser"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "NeedRollupEnum",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAd": {
                            "enum": [
                                "PreviousValue",
                                "CustomizeValue",
                                "NotFillValue"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "FillMissingPointType",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAdValue": {
                            "format": "double",
                            "type": "number"
                        },
                        "rollUpMethod": {
                            "enum": [
                                "None",
                                "Sum",
                                "Max",
                                "Min",
                                "Avg",
                                "Count"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "RollUpMethod",
                                "modelAsString": true
                            }
                        },
                        "stopRetryAfterInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "rollUpColumns": {
                            "type": "string"
                        },
                        "minRetryIntervalInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "maxConcurrency": {
                            "format": "int32",
                            "default": 0,
                            "maximum": 30.0,
                            "minimum": 0.0,
                            "type": "integer"
                        },
                        "datafeedDescription": {
                            "type": "string"
                        },
                        "viewMode": {
                            "default": 0,
                            "enum": [
                                "Private",
                                "Public"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "ViewMode",
                                "modelAsString": true
                            }
                        },
                        "admins": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "viewers": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "creator": {
                            "type": "string",
                            "readOnly": true
                        },
                        "status": {
                            "default": 0,
                            "enum": [
                                "Active",
                                "Paused"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "EntityStatus",
                                "modelAsString": true
                            }
                        },
                        "createdTime": {
                            "format": "date-time",
                            "type": "string",
                            "readOnly": true
                        },
                        "isAdmin": {
                            "type": "boolean",
                            "readOnly": true
                        },
                        "actionLinkTemplate": {
                            "type": "string"
                        }
                    }
                }
            ],
            "properties": {},
            "x-ms-discriminator-value": "dataSourceType"
        },
        "EventHubParameter": {
            "required": [
                "connectionString",
                "consumerGroup"
            ],
            "type": "object",
            "properties": {
                "connectionString": {
                    "description": "Eventhub connection string",
                    "type": "string"
                },
                "consumerGroup": {
                    "description": "Eventhub consumer group",
                    "type": "string"
                }
            }
        },
        "MongoDBDatafeed": {
            "required": [
                "dataSourceParameter",
                "datafeedName",
                "metrics",
                "dimensions",
                "dataStartFrom",
                "dataSourceType",
                "granularityName"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatafeedDetailInfo"
                },
                {
                    "required": [
                        "dataSourceParameter",
                        "datafeedName",
                        "metrics",
                        "dimensions",
                        "dataStartFrom",
                        "dataSourceType",
                        "granularityName"
                    ],
                    "type": "object",
                    "properties": {
                        "dataSourceParameter": {
                            "$ref": "#/definitions/MongoDBParameter"
                        },
                        "datafeedId": {
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                        },
                        "datafeedName": {
                            "type": "string"
                        },
                        "metrics": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Metric"
                            }
                        },
                        "dimensions": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dimension"
                            }
                        },
                        "dataStartFrom": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "dataSourceType": {
                            "enum": [
                                "SqlServer",
                                "Cube",
                                "JSON",
                                "AzureBlob",
                                "Kusto",
                                "AzureTable",
                                "MySql",
                                "PostgreSql",
                                "InfluxDB",
                                "EventHub",
                                "HttpRequest",
                                "CosmosDB",
                                "MongoDB"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                            }
                        },
                        "timestampColumn": {
                            "type": "string"
                        },
                        "startOffsetInSeconds": {
                            "format": "int64",
                            "default": 0,
                            "type": "integer"
                        },
                        "maxQueryPerMinute": {
                            "format": "float",
                            "default": -1,
                            "type": "number"
                        },
                        "granularityName": {
                            "enum": [
                                "Yearly",
                                "Monthly",
                                "Weekly",
                                "Daily",
                                "Hourly",
                                "Minutely",
                                "Secondly",
                                "Custom"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "Granularity",
                                "modelAsString": true
                            }
                        },
                        "granularityAmount": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "allUpIdentification": {
                            "type": "string"
                        },
                        "needRollup": {
                            "enum": [
                                "NotRollup",
                                "RollupBySystem",
                                "RollupByUser"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "NeedRollupEnum",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAd": {
                            "enum": [
                                "PreviousValue",
                                "CustomizeValue",
                                "NotFillValue"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "FillMissingPointType",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAdValue": {
                            "format": "double",
                            "type": "number"
                        },
                        "rollUpMethod": {
                            "enum": [
                                "None",
                                "Sum",
                                "Max",
                                "Min",
                                "Avg",
                                "Count"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "RollUpMethod",
                                "modelAsString": true
                            }
                        },
                        "stopRetryAfterInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "rollUpColumns": {
                            "type": "string"
                        },
                        "minRetryIntervalInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "maxConcurrency": {
                            "format": "int32",
                            "default": 0,
                            "maximum": 30.0,
                            "minimum": 0.0,
                            "type": "integer"
                        },
                        "datafeedDescription": {
                            "type": "string"
                        },
                        "viewMode": {
                            "default": 0,
                            "enum": [
                                "Private",
                                "Public"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "ViewMode",
                                "modelAsString": true
                            }
                        },
                        "admins": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "viewers": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "creator": {
                            "type": "string",
                            "readOnly": true
                        },
                        "status": {
                            "default": 0,
                            "enum": [
                                "Active",
                                "Paused"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "EntityStatus",
                                "modelAsString": true
                            }
                        },
                        "createdTime": {
                            "format": "date-time",
                            "type": "string",
                            "readOnly": true
                        },
                        "isAdmin": {
                            "type": "boolean",
                            "readOnly": true
                        },
                        "actionLinkTemplate": {
                            "type": "string"
                        }
                    }
                }
            ],
            "properties": {},
            "x-ms-discriminator-value": "dataSourceType"
        },
        "MongoDBParameter": {
            "required": [
                "connectionString",
                "database",
                "command"
            ],
            "type": "object",
            "properties": {
                "connectionString": {
                    "description": "MongoDB connection string",
                    "type": "string"
                },
                "database": {
                    "description": "Database name",
                    "type": "string"
                },
                "command": {
                    "description": "Query script",
                    "type": "string"
                }
            }
        },
        "HttpRequestDatafeed": {
            "required": [
                "dataSourceParameter",
                "datafeedName",
                "metrics",
                "dimensions",
                "dataStartFrom",
                "dataSourceType",
                "granularityName"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatafeedDetailInfo"
                },
                {
                    "required": [
                        "dataSourceParameter",
                        "datafeedName",
                        "metrics",
                        "dimensions",
                        "dataStartFrom",
                        "dataSourceType",
                        "granularityName"
                    ],
                    "type": "object",
                    "properties": {
                        "dataSourceParameter": {
                            "$ref": "#/definitions/HttpRequestParameter"
                        },
                        "datafeedId": {
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                        },
                        "datafeedName": {
                            "type": "string"
                        },
                        "metrics": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Metric"
                            }
                        },
                        "dimensions": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dimension"
                            }
                        },
                        "dataStartFrom": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "dataSourceType": {
                            "enum": [
                                "SqlServer",
                                "Cube",
                                "JSON",
                                "AzureBlob",
                                "Kusto",
                                "AzureTable",
                                "MySql",
                                "PostgreSql",
                                "InfluxDB",
                                "EventHub",
                                "HttpRequest",
                                "CosmosDB",
                                "MongoDB"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                            }
                        },
                        "timestampColumn": {
                            "type": "string"
                        },
                        "startOffsetInSeconds": {
                            "format": "int64",
                            "default": 0,
                            "type": "integer"
                        },
                        "maxQueryPerMinute": {
                            "format": "float",
                            "default": -1,
                            "type": "number"
                        },
                        "granularityName": {
                            "enum": [
                                "Yearly",
                                "Monthly",
                                "Weekly",
                                "Daily",
                                "Hourly",
                                "Minutely",
                                "Secondly",
                                "Custom"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "Granularity",
                                "modelAsString": true
                            }
                        },
                        "granularityAmount": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "allUpIdentification": {
                            "type": "string"
                        },
                        "needRollup": {
                            "enum": [
                                "NotRollup",
                                "RollupBySystem",
                                "RollupByUser"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "NeedRollupEnum",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAd": {
                            "enum": [
                                "PreviousValue",
                                "CustomizeValue",
                                "NotFillValue"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "FillMissingPointType",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAdValue": {
                            "format": "double",
                            "type": "number"
                        },
                        "rollUpMethod": {
                            "enum": [
                                "None",
                                "Sum",
                                "Max",
                                "Min",
                                "Avg",
                                "Count"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "RollUpMethod",
                                "modelAsString": true
                            }
                        },
                        "stopRetryAfterInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "rollUpColumns": {
                            "type": "string"
                        },
                        "minRetryIntervalInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "maxConcurrency": {
                            "format": "int32",
                            "default": 0,
                            "maximum": 30.0,
                            "minimum": 0.0,
                            "type": "integer"
                        },
                        "datafeedDescription": {
                            "type": "string"
                        },
                        "viewMode": {
                            "default": 0,
                            "enum": [
                                "Private",
                                "Public"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "ViewMode",
                                "modelAsString": true
                            }
                        },
                        "admins": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "viewers": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "creator": {
                            "type": "string",
                            "readOnly": true
                        },
                        "status": {
                            "default": 0,
                            "enum": [
                                "Active",
                                "Paused"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "EntityStatus",
                                "modelAsString": true
                            }
                        },
                        "createdTime": {
                            "format": "date-time",
                            "type": "string",
                            "readOnly": true
                        },
                        "isAdmin": {
                            "type": "boolean",
                            "readOnly": true
                        },
                        "actionLinkTemplate": {
                            "type": "string"
                        }
                    }
                }
            ],
            "properties": {},
            "x-ms-discriminator-value": "dataSourceType"
        },
        "HttpRequestParameter": {
            "required": [
                "url",
                "httpHeader",
                "httpMethod",
                "payload"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "description": "Http url",
                    "type": "string"
                },
                "httpHeader": {
                    "description": "Http header",
                    "type": "string"
                },
                "httpMethod": {
                    "description": "Http method",
                    "type": "string"
                },
                "payload": {
                    "description": "Payload",
                    "type": "string"
                }
            }
        },
        "InfluxDBDatafeed": {
            "required": [
                "dataSourceParameter",
                "datafeedName",
                "metrics",
                "dimensions",
                "dataStartFrom",
                "dataSourceType",
                "granularityName"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/DatafeedDetailInfo"
                },
                {
                    "required": [
                        "dataSourceParameter",
                        "datafeedName",
                        "metrics",
                        "dimensions",
                        "dataStartFrom",
                        "dataSourceType",
                        "granularityName"
                    ],
                    "type": "object",
                    "properties": {
                        "dataSourceParameter": {
                            "$ref": "#/definitions/InfluxDBParameter"
                        },
                        "datafeedId": {
                            "format": "uuid",
                            "type": "string",
                            "readOnly": true
                        },
                        "datafeedName": {
                            "type": "string"
                        },
                        "metrics": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Metric"
                            }
                        },
                        "dimensions": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dimension"
                            }
                        },
                        "dataStartFrom": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "dataSourceType": {
                            "enum": [
                                "SqlServer",
                                "Cube",
                                "JSON",
                                "AzureBlob",
                                "Kusto",
                                "AzureTable",
                                "MySql",
                                "PostgreSql",
                                "InfluxDB",
                                "EventHub",
                                "HttpRequest",
                                "CosmosDB",
                                "MongoDB"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "DataSourceType",
                                "modelAsString": true
                            }
                        },
                        "timestampColumn": {
                            "type": "string"
                        },
                        "startOffsetInSeconds": {
                            "format": "int64",
                            "default": 0,
                            "type": "integer"
                        },
                        "maxQueryPerMinute": {
                            "format": "float",
                            "default": -1,
                            "type": "number"
                        },
                        "granularityName": {
                            "enum": [
                                "Yearly",
                                "Monthly",
                                "Weekly",
                                "Daily",
                                "Hourly",
                                "Minutely",
                                "Secondly",
                                "Custom"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "Granularity",
                                "modelAsString": true
                            }
                        },
                        "granularityAmount": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "allUpIdentification": {
                            "type": "string"
                        },
                        "needRollup": {
                            "enum": [
                                "NotRollup",
                                "RollupBySystem",
                                "RollupByUser"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "NeedRollupEnum",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAd": {
                            "enum": [
                                "PreviousValue",
                                "CustomizeValue",
                                "NotFillValue"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "FillMissingPointType",
                                "modelAsString": true
                            }
                        },
                        "fillMissingPointForAdValue": {
                            "format": "double",
                            "type": "number"
                        },
                        "rollUpMethod": {
                            "enum": [
                                "None",
                                "Sum",
                                "Max",
                                "Min",
                                "Avg",
                                "Count"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "RollUpMethod",
                                "modelAsString": true
                            }
                        },
                        "stopRetryAfterInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "rollUpColumns": {
                            "type": "string"
                        },
                        "minRetryIntervalInSeconds": {
                            "format": "int64",
                            "type": "integer"
                        },
                        "maxConcurrency": {
                            "format": "int32",
                            "default": 0,
                            "maximum": 30.0,
                            "minimum": 0.0,
                            "type": "integer"
                        },
                        "datafeedDescription": {
                            "type": "string"
                        },
                        "viewMode": {
                            "default": 0,
                            "enum": [
                                "Private",
                                "Public"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "ViewMode",
                                "modelAsString": true
                            }
                        },
                        "admins": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "viewers": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "creator": {
                            "type": "string",
                            "readOnly": true
                        },
                        "status": {
                            "default": 0,
                            "enum": [
                                "Active",
                                "Paused"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "name": "EntityStatus",
                                "modelAsString": true
                            }
                        },
                        "createdTime": {
                            "format": "date-time",
                            "type": "string",
                            "readOnly": true
                        },
                        "isAdmin": {
                            "type": "boolean",
                            "readOnly": true
                        },
                        "actionLinkTemplate": {
                            "type": "string"
                        }
                    }
                }
            ],
            "properties": {},
            "x-ms-discriminator-value": "dataSourceType"
        },
        "InfluxDBParameter": {
            "required": [
                "connectionString",
                "database",
                "userName",
                "password",
                "query"
            ],
            "type": "object",
            "properties": {
                "connectionString": {
                    "description": "InfluxDB connection string",
                    "type": "string"
                },
                "database": {
                    "description": "Database name",
                    "type": "string"
                },
                "userName": {
                    "description": "Database access user",
                    "type": "string"
                },
                "password": {
                    "description": "Database access password",
                    "type": "string"
                },
                "query": {
                    "description": "Query script",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "apiKeyHeader": {
            "name": "x-api-key",
            "in": "header",
            "type": "apiKey"
        }
    }
}
